{"version":3,"sources":["components/partials/instruments/Guitar/Fret.module.scss","components/partials/Options.module.scss","components/partials/AlternativeSelections.module.scss","assets/svg/flowchord-logo-white.svg","components/partials/MainAppBar.module.scss","assets/svg/flowchord-logo-gray-vertical.svg","App.module.scss","reducers/AlternativeSelectionsReducer.js","constants/types.js","reducers/ChordsReducer.js","reducers/GuitarTunersReducer.js","reducers/IntervalsReducer.js","reducers/LabelsReducer.js","reducers/NotesReducer.js","reducers/ScalesReducer.js","reducers/SelectedChordNameReducer.js","reducers/SelectedKeyNumberReducer.js","reducers/SelectedLabelReducer.js","reducers/SelectedScaleNameReducer.js","reducers/SelectedSelectionTypeReducer.js","reducers/SelectionTypesReducer.js","reducers/SettingsGuitarReducer.js","reducers/SettingsKeyboardReducer.js","utils/configureStore.js","helpers/noteHelpers.js","actions/SelectedSelectionNameActions.js","components/partials/Note.js","actions/NotesActions.js","components/partials/instruments/Guitar/Fret.js","components/partials/instruments/Guitar.js","actions/GuitarTunersActions.js","components/partials/instruments/Keyboard/KeyboardKey.js","components/partials/instruments/Keyboard.js","components/routes/Home.js","components/routes/NotFound.js","components/partials/Selection.js","actions/SelectedKeyNumberActions.js","components/partials/Options.js","actions/SelectedSelectionTypeActions.js","actions/SelectedLabelActions.js","actions/SettingsGuitarActions.js","actions/SettingsKeyboardActions.js","components/partials/AlternativeSelections.js","components/partials/MainAppBar.js","components/partials/Footer.js","theme.js","App.js","reducers/index.js","serviceWorker.js","index.js","components/partials/instruments/Guitar.module.scss","components/partials/Selection.module.scss","components/partials/Note.module.scss","components/partials/instruments/Keyboard/KeyboardKey.module.scss","components/partials/Footer.module.scss","components/partials/instruments/Keyboard.module.scss"],"names":["module","exports","initialState","state","action","type","payload","history","createBrowserHistory","composeEnhancers","composeWithDevTools","getNoteByNoteNumber","notes","noteNumber","find","note","number","noteNumberToHalfSteps","selectedKeyNumber","sortNumber","a","b","getMatchedSelection","noteSelections","selectedHalfSteps","Object","keys","noteSelectionName","noteSelection","parsedHalfSteps","length","every","element","index","getSelectionFromName","selection","selectionName","getAlternativeSelections","single","alternativeSelections","keyIndex","parseInt","relativeKeyIndex","relativeParsedHalfSteps","map","parsedHalfStep","relativeParsedHalfStep","sort","join","matchedSelection","alternativeSelection","push","removeCustomSelection","custom","newNoteSelections","Note","keyNumber","this","props","name","halfSteps","intervals","checked","selectedSelectionType","newNotes","toggleNote","updateSelectedSelectionNameFromNotes","keyName","getKeyName","interval","getInterval","scales","chords","className","style","Button","color","disableElevation","variant","selected","onClick","event","handleNoteOnClick","button","notSelected","keyColor","selectedLabel","label","Component","mapDispatchToProps","dispatch","getState","noteNumbers","noteNumbersToHalfSteps","filter","getSelectedNoteNumbersFromNotes","alternativeSelectionsToAlternativeSelection","addCustomSelection","connect","Fret","fretNumber","tunerNumber","getKeyNumber","fret","Guitar","stringNumber","updateTunerNumber","guitarTuners","tuner","optionElements","MenuItem","key","value","Select","tunerSelect","onChange","handleTunerChange","target","settingsGuitar","numberOfFrets","fretNumbers","fretnumber","frets","firstFret","string","renderFrets","show","id","guitar","active","instrumentView","fretboard","tuners","renderTunerElements","renderFretNumbers","renderGuitarNeck","newGuitarTuners","updateGuitarTuners","KeyboardKey","lowestNote","keycolor","keyboardKey","Keyboard","settingsKeyboard","numberOfKeys","keyboard","renderKeys","Home","NotFound","Selection","updateSelectedSelectionSelectList","selectedScaleName","selectedChordName","chordName","scaleName","FormControl","formControl","InputLabel","select","labelId","handleKeyChange","renderKeyOptions","handleChordChange","renderChordOptions","handleScaleChange","renderScaleOptions","updateSelectedKeyNumber","updateSelectedChordName","updateSelectedScaleName","selectedSelectionName","relativeHalfSteps","halfStep","halfStepsToNoteNumber","halfStepsToNoteNumbers","includes","Options","selectionType","updateSelectedSelectionType","updateSelectedLabel","newSettingsGuitar","updateSettingsGuitar","newSettingsKeyboard","updateSettingsKeyboard","selectionTypes","labels","Fragment","List","subheader","ListSubheader","options","ListItem","fullWidth","handleSelectionTypeChange","renderSelectionTypeOptions","handleLabelChange","renderLabelOptions","Divider","ListItemText","primary","ListItemSecondaryAction","Switch","edge","handleToggleGuitar","inputProps","Collapse","in","timeout","unmountOnExit","TextField","handleNumberOfFretsChange","min","max","InputLabelProps","shrink","handleToggleKeyboard","handleNumberOfKeysChange","handleLowestNoteChange","renderLowestNoteOptions","AlternativeSelections","isListOpen","anchorEl","showSnackbar","listId","handleListOpen","bind","handleListClose","handleSnackbarClose","prevProps","hasAlternativeSelections","setState","setAnchorEl","currentTarget","reason","updateSelectedSelectionFromAlternativeSelectionList","anchorOrigin","vertical","horizontal","getContentAnchorEl","keepMounted","transformOrigin","open","onClose","renderAlternativeSelectionsListItems","IconButton","aria-label","aria-controls","aria-haspopup","Badge","badgeContent","fontSize","Snackbar","autoHideDuration","message","size","renderAlternativeSelectionsList","selectedAlternativeSelection","prevSelectedKeyNumber","prevSelectedSelectionName","prevSelection","newAlternativeSelections","MainAppBar","isDrawerOpen","handleDrawerOpen","handleDrawerClose","AppBar","position","Toolbar","src","FlowChordLogo","alt","appBarLogo","SwipeableDrawer","anchor","onOpen","footer","logo","text","href","theme","createMuiTheme","palette","main","secondary","background","default","overrides","MuiAppBar","colorPrimary","backgroundColor","WebFont","load","google","families","store","preloadedState","middleware","thunk","createStore","combineReducers","router","connectRouter","AlternativeSelectionsReducer","ChordsReducer","GuitarTunersReducer","IntervalsReducer","LabelsReducer","NotesReducer","ScalesReducer","SelectedChordNameReducer","SelectedKeyNumberReducer","SelectedLabelReducer","SelectedScaleNameReducer","SelectedSelectionTypeReducer","SelectionTypesReducer","SettingsGuitarReducer","SettingsKeyboardReducer","createRootReducer","applyMiddleware","routerMiddleware","configureStore","App","ThemeProvider","app","exact","path","render","Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"iYACAA,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,qBAAuB,oDAAoD,qBAAuB,sD,oBCDpHD,EAAOC,QAAU,IAA0B,kD,oBCC3CD,EAAOC,QAAU,CAAC,WAAa,iC,oBCD/BD,EAAOC,QAAU,IAA0B,0D,oBCC3CD,EAAOC,QAAU,CAAC,IAAM,mB,2QCClBC,EAAe,GAEN,aAAwC,IAA/BC,EAA8B,uDAAtBD,EAAcE,EAAQ,uCACpD,OAAQA,EAAOC,MACb,ICDyC,gCDE1C,OAAOD,EAAOE,QACb,QACE,OAAOH,IELPD,E,MAES,aAAwC,IAA/BC,EAA8B,uDAAtBD,EAAcE,EAAQ,uCACpD,OAAQA,EAAOC,MACb,IDLyB,gBCM1B,OAAOD,EAAOE,QACb,QACE,OAAOH,ICRPD,E,MAES,aAAwC,IAA/BC,EAA8B,uDAAtBD,EAAcE,EAAQ,uCACrD,OAAOA,EAAOC,MACb,IFMiC,sBELhC,OAAOD,EAAOE,QACf,QACC,OAAOH,ICRJD,E,MAES,aAAwC,IAA/BC,EAA8B,uDAAtBD,EAAcE,EAAQ,uCAGhD,OAFIA,EAAOC,KAEJF,GCLPD,E,MAES,aAAwC,IAA/BC,EAA8B,uDAAtBD,EAAcE,EAAQ,uCAGhD,OAFIA,EAAOC,KAEJF,GCCPD,E,MAES,aAAwC,IAA/BC,EAA8B,uDAAtBD,EAAcE,EAAQ,uCACpD,OAAQA,EAAOC,MACb,ILZuB,cKcvB,ILbyB,gBKezB,ILdiC,wBKe/B,OAAOD,EAAOE,QAChB,QACE,OAAOH,ICfPD,E,MAES,aAAwC,IAA/BC,EAA8B,uDAAtBD,EAAcE,EAAQ,uCACpD,OAAQA,EAAOC,MACb,INJyB,gBMK1B,OAAOD,EAAOE,QACb,QACE,OAAOH,ICPE,aAAwC,IAA/BA,EAA8B,uDAFjC,GAEyBC,EAAQ,uCACrD,OAAOA,EAAOC,MACb,IPAwC,6BOCvC,OAAOD,EAAOE,QACf,QACC,OAAOH,ICLK,aAAwC,IAA/BA,EAA8B,uDAFjC,EAEyBC,EAAQ,uCACrD,OAAOA,EAAOC,MACb,IRCwC,6BQAvC,OAAOD,EAAOE,QACf,QACC,OAAOH,ICLK,aAAwC,IAA/BA,EAA8B,uDAFjC,MAEyBC,EAAQ,uCACrD,OAAOA,EAAOC,MACb,ITEmC,wBSDlC,OAAOD,EAAOE,QACf,QACC,OAAOH,ICLK,aAAwC,IAA/BA,EAA8B,uDAFjC,GAEyBC,EAAQ,uCACrD,OAAOA,EAAOC,MACb,IVGwC,6BUFvC,OAAOD,EAAOE,QACf,QACC,OAAOH,ICLK,aAAwC,IAA/BA,EAA8B,uDAFjC,QAEyBC,EAAQ,uCACpD,OAAQA,EAAOC,MACb,IXI0C,iCWH3C,OAAOD,EAAOE,QACb,QACE,OAAOH,ICPPD,E,OAES,aAAwC,IAA/BC,EAA8B,uDAAtBD,EAAcE,EAAQ,uCAGhD,OAFIA,EAAOC,KAEJF,GCHPD,E,OAES,aAAwC,IAA/BC,EAA8B,uDAAtBD,EAAcE,EAAQ,uCACrD,OAAOA,EAAOC,MACb,IbGoC,yBaFnC,OAAOD,EAAOE,QACf,QACC,OAAOH,ICPJD,E,OAES,aAAwC,IAA/BC,EAA8B,uDAAtBD,EAAcE,EAAQ,uCACrD,OAAOA,EAAOC,MACb,IdIsC,2BcHrC,OAAOD,EAAOE,QACf,QACC,OAAOH,ICAGI,EAAUC,cAEjBC,EAAmBC,8BAAoB,I,+CCbhCC,GAAsB,SAACC,EAAOC,GACzC,OAAOD,EAAME,MAAK,SAAAC,GAChB,OAAOA,EAAKC,SAAWH,MAIdI,GAAwB,SAACJ,EAAYK,GAChD,OAAQL,EAAaK,GAAqB,IAAM,GAAKL,EAAaK,GAAqB,IAAM,GAAKL,EAAaK,GAAqB,ICYhIC,GAAa,SAACC,EAAGC,GACrB,OAAOD,EAAIC,GAGPC,GAAsB,SAACC,EAAgBC,GAC3C,OAAOC,OAAOC,KAAKH,GAAgBT,MAAK,SAAAa,GACtC,IAAMC,EAAgBL,EAAeI,GACrC,OAAOC,EAAcC,gBAAgBC,SAAWN,EAAkBM,QAAUF,EAAcC,gBAAgBE,OAAM,SAACC,EAASC,GACxH,OAAOD,IAAYR,EAAkBS,UAKrCC,GAAuB,SAACC,EAAWC,GACvC,OAAOD,EAAUC,IAGbC,GAA2B,WAAkF,IAAjFC,EAAgF,wDAAhE1B,EAAgE,uCAAzDW,EAAyD,uCAAzCL,EAAyC,uCAAtBM,EAAsB,uCAC5Ge,EAAwB,GAC5B,IAAK,IAAIC,KAAY5B,EACnB,GAAI6B,SAASD,KAActB,EAAmB,CAAC,IAAD,aAC5C,IAAIwB,EAAmBF,EAAWtB,EAC9ByB,EAA0BnB,EAAkBoB,KAAI,SAAAC,GAClD,IAAIC,EAAyBD,EAAiBH,EAE9C,OADAI,EAAyBA,GAA0B,EAAIA,EAAyBA,EAAyB,IACzE,MAElCH,EAAwBI,KAAK5B,IAAY6B,KAAK,KAC9C,IAAMC,EAAmB3B,GAAoBC,EAAgBoB,GAC7D,GAAIM,EAAkB,CACpB,IAAMC,EAAuB,CAC3BnC,KAAMH,EAAM4B,GACZL,UAAWD,GAAqBX,EAAgB0B,GAChDb,cAAea,GAEjB,GAAIX,EAAQ,MAAM,CAAN,EAAOY,GACdX,EAAsBY,KAAKD,IAhBU,qCAoBhD,OAAOZ,EAAS,KAAOC,GA8FnBa,GAAwB,SAAA7B,GAC5B,GAAIA,EAAe8B,OAAO,CACtB,IAAIC,EAAiB,eAAO/B,GAE7B,cADQ+B,EAAiB,OAClBA,EAER,OAAO/B,G,oBC7ILgC,G,yKACMC,GACV,OAAOC,KAAKC,MAAM9C,MAAM4C,GAAWG,O,kCAGvBC,GACZ,OAAOH,KAAKC,MAAMG,UAAUD,K,wCAGVE,EAASjD,EAAYK,EAAmBK,EAAgBwC,GACxE,IAAMC,EAAWP,KAAKC,MAAMO,WAAWpD,EAAYiD,GACnDL,KAAKC,MAAMQ,qCAAqCF,EAAU9C,EAAmBK,EAAgBwC,K,+BAGrF,IAAD,OACDP,EAAYC,KAAKC,MAAMF,UACvBW,EAAUV,KAAKW,WAAWZ,GAC1BzC,EAAO0C,KAAKC,MAAM3C,KAClB6C,EAAY3C,GAAsBuC,EAAWC,KAAKC,MAAMxC,mBACxDmD,EAAWZ,KAAKa,YAAYV,GAc5BrC,EAAsD,UAArCkC,KAAKC,MAAMK,sBAAoCN,KAAKC,MAAMa,OAASd,KAAKC,MAAMc,OAErG,OAAQ,yBAAKC,UAAWC,KAAM3D,MACxB,kBAAC4D,EAAA,EAAD,CAAQC,MAAM,UACNC,kBAAgB,EAChBC,QAAS/D,EAAKgE,SAAW,YAAc,OACvCC,QAAS,SAAAC,GAAK,OAAI,EAAKC,mBAAmBnE,EAAKgE,SAAUvB,EAAW,EAAKE,MAAMxC,kBAAmBK,EAAgB,EAAKmC,MAAMK,wBAC7HU,UAAS,UAAKC,KAAMS,OAAX,YAAqBpE,EAAKgE,SAAWL,KAAMd,GAAac,KAAMU,YAA9D,YAA6E3B,KAAKC,MAAM2B,SAAWX,KAAMjB,KAAKC,MAAM2B,UAAY,KAnBzI,WACZ,OAAO,EAAK3B,MAAM4B,eAChB,IAAK,MACH,OAAOnB,EACT,IAAK,WACH,OAAOE,EACT,IAAK,YACH,OAAOT,EACT,QACE,MAAO,IAYI2B,S,GA1CFC,aAgEbC,GAAqB,CACvBxB,WCjFsB,SAACpD,EAAYiD,GAAb,OAAyB,SAAC4B,EAAUC,GAC5D,IAAM/E,EAAQ+E,KAAcA,IAAW/E,MACnCoD,EAAQ,YAAOpD,GAGnB,OAFAoD,EAASnD,GAAYkE,SAAWjB,EAChC4B,EAAS,CAACrF,KAAMyD,EnBNS,cACE,gBmBK4BxD,QAAS0D,IACzDA,ID6ELE,qCDgFgD,SAACtD,EAAOM,EAAmBK,EAAgBwC,GAA3C,OAAqE,SAAA2B,GACvH,IACIlE,ED5JgC,SAACoE,EAAa1E,GAClD,OAAO0E,EAAYhD,KAAI,SAAA/B,GACrB,OAAOI,GAAsBJ,EAAYK,MC0JnB2E,CD5IqB,SAAAjF,GAC7C,OAAOA,EAAMkF,QAAO,SAAA/E,GAClB,OAAOA,EAAKgE,YACXnC,KAAI,SAAA7B,GACL,OAAOA,EAAKC,UCuIc+E,CAAgCnF,GACQM,GACpEM,EAAkBuB,KAAK5B,IAAY6B,KAAK,KACxC,IAAMC,EAAmB3B,GAAoBC,EAAgBC,GAE7D,GAAIyB,EAAkB,CACtB,IAAMV,EAAwBF,IAAyB,EAAOzB,EAAOW,EAAgBL,EAAmBM,GAStG,GARAkE,EAAS,CACPrF,KAAgC,UAA1B0D,EjBpK8B,6BAHA,6BiBwKpCzD,QAAS2C,IAEbyC,EAAS,CACRrF,KjB5K0C,gCiB6K1CC,QAASiC,IAELhB,EAAe8B,OAAO,CACvB,IAAMC,EAAoBF,GAAsB7B,GAChDmE,EAAS,CACPrF,KAAgC,UAA1B0D,EjBnLe,gBADA,gBiBqLrBzD,QAASgD,SAGT,CACN,IAAMJ,EAAuBb,IAAyB,EAAMzB,EAAOW,EAAgBL,EAAmBM,GACtG,GAAI0B,EAAqB,CACxB,IAAM8C,EAA8C3D,IAAyB,EAAOzB,EAAOW,EAAgB2B,EAAqBnC,KAAKC,OAAQkC,EAAqBf,UAAUN,iBAazK,GAZH6D,EAAS,CACLrF,KAAgC,UAA1B0D,EjBvL6B,6BAHA,6BiB2LnCzD,QAAS4C,EAAqBd,gBAElCsD,EAAS,CACLrF,KjB7LmC,6BiB8LnCC,QAAS4C,EAAqBnC,KAAKC,SAEvC0E,EAAS,CACLrF,KjBnMsC,gCiBoMtCC,QAAS0F,IAEPzE,EAAe8B,OAAO,CACvB,IAAMC,EAAoBF,GAAsB7B,GAChDmE,EAAS,CACPrF,KAAgC,UAA1B0D,EjB1Ma,gBADA,gBiB4MnBzD,QAASgD,SAGV,CACH,IAAMA,EApEe,SAAC/B,EAAgBC,GAC1C,OAAO,2BACFD,GADL,IAEE8B,OAAQ,CACNO,UAAWpC,EACXK,gBAAiBL,KA+DSyE,CAAmB1E,EAAgBC,GAC7DkE,EAAS,CACPrF,KAAgC,UAA1B0D,EjBjNe,gBADA,gBiBmNrBzD,QAASgD,IAEXoC,EAAS,CACRrF,KjBpNsC,gCiBqNtCC,QAAS,KAEVoF,EAAS,CACPrF,KAAgC,UAA1B0D,EjBpN4B,6BAHA,6BiBwNlCzD,QAAS,gBCvIF4F,gBAfS,SAAA/F,GAAK,MAAK,CAChCS,MAAOT,EAAMS,MACb4D,OAAQrE,EAAMqE,OACdD,OAAQpE,EAAMoE,OACdV,UAAW1D,EAAM0D,UACjBE,sBAAuB5D,EAAM4D,sBAC7BuB,cAAenF,EAAMmF,cACrBpE,kBAAmBf,EAAMe,qBAQauE,GAAzBS,CAA6C3C,I,qBE3EtD4C,G,2KAEQC,EAAYC,GACxB,OAAQD,EAAaC,GAAe,K,+BAIlC,IAAM7C,EAAYC,KAAK6C,aAAa7C,KAAKC,MAAM0C,WAAY3C,KAAKC,MAAM2C,aAChEtF,EAAO0C,KAAKC,MAAM9C,MAAM4C,GAE9B,OAAQ,yBAAKiB,UAAWC,KAAM6B,MAC1B,kBAAC,GAAD,CAAMxF,KAAMA,EAAMyC,UAAWA,S,GAXlBgC,aA0BJU,gBAJS,SAAA/F,GAAK,MAAK,CAChCS,MAAOT,EAAMS,SAGyB,KAAzBsF,CAA+BC,I,oBCrBxCK,G,gLAEcC,EAAcJ,GAC9B5C,KAAKC,MAAMgD,kBAAkBD,EAAcJ,K,0CAEzBM,EAAc/F,GAAO,IAAD,OACtC,OAAO+F,GAAgBA,EAAa7E,OAChC6E,EAAa/D,KAAI,SAACgE,EAAOH,GACzB,IAAMI,EAAiBjG,EAAMgC,KAAI,SAAA7B,GAC/B,OAAO,kBAAC+F,EAAA,EAAD,CAAUC,IAAG,qBAAgBhG,EAAKC,QAAUgG,MAAOjG,EAAKC,QAASD,EAAK4C,SAE/E,OAAQ,yBAAKoD,IAAG,UAAKN,EAAL,YAAqBG,EAAM5F,QAAUyD,UAAWC,KAAMkC,OACpE,kBAACK,EAAA,EAAD,CAAQD,MAAOJ,EAAM5F,OAAQyD,UAAWC,KAAMwC,YAAaC,SAAU,SAAClC,GAAD,OAAW,EAAKmC,kBAAkBX,EAAchE,SAASwC,EAAMoC,OAAOL,UACxIH,GAEH,yBAAKpC,UAAWC,KAAM6B,MACpB,kBAAC,GAAD,CAAMH,WAAY,EAAGC,YAAaO,EAAM5F,OAAQyF,aAAchE,SAASgE,UAI3E,K,wCAGYa,GAChB,IAAMC,EAAgBD,GAAkBA,EAAeC,cAAgBD,EAAeC,cAAgB,KAClGC,EAAc,GAClB,GAAID,EAEA,IADF,IAAInB,EAAa,EACRA,GAAcmB,GACrBC,EAAYrE,KAAK,yBAAK4D,IAAG,qBAAgBX,GAAc3B,UAAS,UAAKC,KAAM6B,KAAX,YAAmB7B,KAAM+C,aAAerB,IACxGA,IAGJ,OAAOoB,I,kCAGGF,EAAgBV,EAAOH,GACjC,IAAMc,EAAgBD,GAAkBA,EAAeC,cAAgBD,EAAeC,cAAgB,KAClGG,EAAQ,GACZ,GAAIH,EAEA,IADF,IAAInB,EAAa,EACRA,GAAcmB,GACrBG,EAAMvE,KAAK,yBAAK4D,IAAG,eAAUX,GAAc3B,UAAS,UAAKC,KAAM6B,KAAX,YAAkC,IAAfH,EAAmB1B,KAAMiD,UAAY,KAC1G,kBAAC,GAAD,CAAMvB,WAAYA,EAAYC,YAAaO,EAAM5F,OAAQyF,aAAcA,MAEzEL,IAGJ,OAAOsB,I,uCAGQJ,EAAgBX,GAAc,IAAD,OAC5C,OAAOA,GAAgBA,EAAa7E,OAChC6E,EAAa/D,KAAI,SAACgE,EAAOH,GACvB,OAAQ,yBAAKM,IAAG,UAAKH,EAAM5F,OAAX,YAAqByF,GAAgBhC,UAAWC,KAAMkD,QAAS,EAAKC,YAAYP,EAAgBV,EAAOnE,SAASgE,QAElI,K,+BAIJ,OAAOhD,KAAKC,MAAM4D,gBAAkB7D,KAAKC,MAAM4D,eAAeQ,KACzD,yBAAKC,GAAG,SAAStD,UAAS,UAAKC,KAAMsD,OAAX,YAAqBtD,KAAMuD,SAC1D,yBAAKxD,UAAS,UAAKC,KAAMwD,eAAX,YAA6BxD,KAAMyD,YAChD,yBAAK1D,UAAWC,KAAM0D,QACrB,yBAAK3D,UAAS,UAAKC,KAAM6B,KAAX,YAAmB7B,KAAM+C,aAAvC,WAGKhE,KAAK4E,oBAAoB5E,KAAKC,MAAMiD,aAAclD,KAAKC,MAAM9C,QAEnE,yBAAK6D,UAAWC,KAAMgD,OAChBjE,KAAK6E,kBAAkB7E,KAAKC,MAAM4D,gBAClC7D,KAAK8E,iBAAiB9E,KAAKC,MAAM4D,eAAgB7D,KAAKC,MAAMiD,iBAG1D,O,GA1EQnB,aAoFfC,GAAqB,CACvBiB,kBCpG6B,SAACD,EAAcJ,GAAf,OAA+B,SAACX,EAAUC,GACzE,IAAMgB,EAAehB,KAAcA,IAAWgB,aAC1C6B,EAAe,YAAO7B,GAC1B6B,EAAgB/B,GAAczF,OAASqF,EACvCX,EAAS,CAACrF,KtBOuB,sBsBPIC,QAASkI,MDiG5CC,mBC9F8B,SAAA9B,GAAY,OAAI,SAAAjB,GAChDA,EAAS,CAACrF,KtBGuB,sBsBHIC,QAASqG,ODiGjCT,gBAZS,SAAA/F,GAAK,MAAK,CAChCmH,eAAgBnH,EAAMmH,eACtBX,aAAcxG,EAAMwG,aACpB/F,MAAOT,EAAMS,SASyB6E,GAAzBS,CAA6CM,I,oBE/FtDkC,G,2KAEQlG,EAAUmG,GACtB,OAAQnG,EAAWmG,GAAc,K,+BAI/B,IAAMnF,EAAYC,KAAK6C,aAAa7C,KAAKC,MAAMlB,SAAUiB,KAAKC,MAAMiF,YAC9D5H,EAAO0C,KAAKC,MAAM9C,MAAM4C,GACxB6B,EAAWtE,EAAK6H,SAEtB,OAAQ,yBAAKnE,UAAS,UAAKC,KAAMmE,YAAX,YAA0BnE,KAAMW,KACpD,yBAAKZ,UAAWC,KAAMP,SACpB,kBAAC,GAAD,CAAMpD,KAAMA,EAAMyC,UAAWA,EAAW6B,SAAUA,U,GAbhCG,aA4BXU,gBAJS,SAAA/F,GAAK,MAAK,CAChCS,MAAOT,EAAMS,SAGyB,KAAzBsF,CAA+BwC,I,oBC9BxCI,G,yKACOC,GACT,IAAMC,EAAeD,GAAoBA,EAAiBC,aAAeD,EAAiBC,aAAe,EACnGL,EAAaI,GAAoBA,EAAiBJ,WAAaI,EAAiBJ,WAAa,EAC/FjH,EAAO,GACX,GAAIsH,EAEF,IADA,IAAIxG,EAAW,EACRA,EAAWwG,GAChBtH,EAAKyB,KAAK,kBAAC,GAAD,CAAa4D,IAAG,cAASvE,GAAYA,SAAUA,EAAUmG,WAAYA,KAC/EnG,IAGJ,OAAOd,I,+BAIP,OAAO+B,KAAKC,MAAMqF,kBAAoBtF,KAAKC,MAAMqF,iBAAiBjB,KAC7D,yBAAKC,GAAG,WAAWtD,UAAS,UAAKC,KAAMuE,SAAX,YAAuBvE,KAAMuD,SACzDxE,KAAKyF,WAAWzF,KAAKC,MAAMqF,mBACzB,O,GAnBYvD,aA4BRU,gBALS,SAAA/F,GAAK,MAAK,CAChC4I,iBAAkB5I,EAAM4I,iBACxBnI,MAAOT,EAAMS,SAGyB,KAAzBsF,CAA+B4C,IC7BxCK,G,uKAGE,OAAQ,6BACJ,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GALO3D,aAUJU,eAAQ,KAAM,KAAdA,CAAoBiD,ICd7BC,G,uKAGE,OAAQ,6BACJ,mCACA,qD,GALW5D,aAURU,eAAQ,KAAM,KAAdA,CAAoBkD,I,6ICE7BC,G,8KAEY7F,GACdC,KAAKC,MAAM4F,kCACT7F,KAAKC,MAAM9C,MACX4C,EACqC,UAArCC,KAAKC,MAAMK,sBAAoCN,KAAKC,MAAM6F,kBAAoB9F,KAAKC,MAAM8F,kBACpD,UAArC/F,KAAKC,MAAMK,sBAAoCN,KAAKC,MAAMa,OAASd,KAAKC,MAAMc,OAC9E,S,wCAIciF,GAChBhG,KAAKC,MAAM4F,kCACT7F,KAAKC,MAAM9C,MACX6C,KAAKC,MAAMxC,kBACXuI,EACAhG,KAAKC,MAAMc,OACX,W,wCAIckF,GAChBjG,KAAKC,MAAM4F,kCACT7F,KAAKC,MAAM9C,MACX6C,KAAKC,MAAMxC,kBACXwI,EACAjG,KAAKC,MAAMa,OACX,W,uCAIa3D,GACf,OAAOA,EAAMgC,KAAI,SAAA7B,GACf,OAAO,kBAAC+F,EAAA,EAAD,CAAUE,MAAOjG,EAAKC,OAAQ+F,IAAKhG,EAAKC,QAASD,EAAK4C,W,yCAI9Ca,GACjB,OAAO/C,OAAOC,KAAK8C,GAAQ5B,KAAI,SAAA6G,GAC7B,OAAO,kBAAC3C,EAAA,EAAD,CAAUC,IAAK0C,EAAWzC,MAAOyC,GAAYA,Q,yCAIrClF,GACjB,OAAO9C,OAAOC,KAAK6C,GAAQ3B,KAAI,SAAA8G,GAC7B,OAAO,kBAAC5C,EAAA,EAAD,CAAUC,IAAK2C,EAAW1C,MAAO0C,GAAYA,Q,+BAI9C,IAAD,OACP,OAAQ,yBAAKjF,UAAWC,KAAMvC,WAC5B,kBAACwH,GAAA,EAAD,CAAalF,UAAWC,KAAMkF,aAC5B,kBAACC,GAAA,EAAD,CAAY9B,GAAG,oBAAf,OACA,kBAACd,EAAA,EAAD,CAAQxC,UAAWC,KAAMoF,OAAQC,QAAQ,mBAAmBhC,GAAG,aAAaf,MAAOvD,KAAKC,MAAMxC,kBAAmBiG,SAAU,SAAAlC,GAAK,OAAI,EAAK+E,gBAAgBvH,SAASwC,EAAMoC,OAAOL,UAC9KvD,KAAKwG,iBAAiBxG,KAAKC,MAAM9C,SAIG,UAArC6C,KAAKC,MAAMK,sBACN,kBAAC4F,GAAA,EAAD,CAAalF,UAAWC,KAAMkF,aAC/B,kBAACC,GAAA,EAAD,CAAY9B,GAAG,sBAAf,SACA,kBAACd,EAAA,EAAD,CAAQxC,UAAWC,KAAMoF,OACjBC,QAAQ,qBACRhC,GAAG,eACHf,MAAOvD,KAAKC,MAAM8F,kBAClBrC,SAAU,SAAAlC,GAAK,OAAI,EAAKiF,kBAAkBjF,EAAMoC,OAAOL,SAC9DvD,KAAK0G,mBAAmB1G,KAAKC,MAAMc,UAGnC,kBAACmF,GAAA,EAAD,CAAalF,UAAWC,KAAMkF,aAC/B,kBAACC,GAAA,EAAD,CAAY9B,GAAG,sBAAf,SACA,kBAACd,EAAA,EAAD,CAAQxC,UAAWC,KAAMoF,OAAQC,QAAQ,qBAAqBhC,GAAG,eAAef,MAAOvD,KAAKC,MAAM6F,kBAAmBpC,SAAU,SAAAlC,GAAK,OAAI,EAAKmF,kBAAkBnF,EAAMoC,OAAOL,SAC3KvD,KAAK4G,mBAAmB5G,KAAKC,MAAMa,e,GAzExBiB,aA2FlBC,GAAqB,CACzB6E,wBC3GqC,SAAApJ,GAAiB,OAAI,SAAAwE,GAC1DA,EAAS,CAACrF,K5BI8B,6B4BJIC,QAASY,MD2GrDqJ,wBVhDqC,SAAAf,GAAiB,OAAI,SAAA9D,GAC1DA,EAAS,CACPrF,KjB1DsC,6BiB2DtCC,QAASkJ,MU8CXgB,wBV1CqC,SAAAjB,GAAiB,OAAI,SAAA7D,GAC1DA,EAAS,CAACrF,KjB7D8B,6BiB6DIC,QAASiJ,MU0CrDD,kCVT+C,SAAC1I,EAAOM,EAAmBuJ,EAAuBlJ,EAAgBwC,GAAlE,OAA4F,SAAA2B,GAC3I,GAAI+E,GAAyBA,EAAsB3I,OAAO,CACxD,IAAM8B,EAAYrC,EAAekJ,GAAuB5I,gBACnD6I,EDtF6B,SAAC9G,EAAW1C,GAChD,OAAO0C,EAAUhB,KAAI,SAAA+H,GACnB,OANiC,SAACA,EAAUzJ,GAC9C,OAAQyJ,EAAWzJ,GAAqB,GAK/B0J,CAAsBD,EAAUzJ,MCoFd2J,CAAuBjH,EAAW1C,GAC5DwJ,EAAkB3H,KAAK5B,IAAY6B,KAAK,KAIxC0C,EAAS,CACRrF,KjB9GiC,wBiB+GjCC,QALgBM,EAAMgC,KAAI,SAAA7B,GAC1B,OAAO,2BAAIA,GAAX,IAAiBgE,SAAU2F,EAAkBI,SAAS/J,EAAKC,eAQ3D0E,EAAS,CACPrF,KjBjHuC,gCiBkHvCC,QAH4B+B,IAAyB,EAAOzB,EAAOW,EAAgBL,EAAmB0C,KAO3G,GAA8B,QAA1BG,EACH2B,EAAS,CACRrF,KjBtHuC,6BiBuHvCC,QAASY,SAOR,GAJFwE,EAAS,CACRrF,KAAgC,UAA1B0D,EjBzHiC,6BAHA,6BiB6HvCzD,QAASmK,IAELlJ,EAAe8B,OAAO,CACvB,IAAMC,EAAoBF,GAAsB7B,GAChDmE,EAAS,CACPrF,KAAgC,UAA1B0D,EjBpIe,gBADA,gBiBsIrBzD,QAASgD,QUtBF4C,gBAjBS,SAAA/F,GAAK,MAAK,CAChCS,MAAOT,EAAMS,MACb4D,OAAQrE,EAAMqE,OACdD,OAAQpE,EAAMoE,OACdrD,kBAAmBf,EAAMe,kBACzBsI,kBAAmBrJ,EAAMqJ,kBACzBD,kBAAmBpJ,EAAMoJ,kBACzBxF,sBAAuB5D,EAAM4D,yBAUS0B,GAAzBS,CAA6CmD,I,qGEtFtD0B,G,wLAEsBC,GACxBvH,KAAKC,MAAMuH,4BAA4BD,K,wCAGvBzF,GAChB9B,KAAKC,MAAMwH,oBAAoB3F,K,yCAGduC,GACjB,IAAMqD,EAAiB,eAAO1H,KAAKC,MAAM4D,gBACzC6D,EAAkBrD,KAAOA,EACzBrE,KAAKC,MAAM0H,qBAAqBD,K,gDAGR5D,GACxB,IAAM4D,EAAiB,eAAO1H,KAAKC,MAAM4D,gBACzC6D,EAAkB5D,cAAgBA,EAClC9D,KAAKC,MAAM0H,qBAAqBD,K,2CAGbrD,GACnB,IAAMuD,EAAmB,eAAO5H,KAAKC,MAAMqF,kBAC3CsC,EAAoBvD,KAAOA,EAC3BrE,KAAKC,MAAM4H,uBAAuBD,K,+CAGXrC,GACvB,IAAMqC,EAAmB,eAAO5H,KAAKC,MAAMqF,kBAC3CsC,EAAoBrC,aAAeA,EACnCvF,KAAKC,MAAM4H,uBAAuBD,K,6CAGb1C,GACrB,IAAM0C,EAAmB,eAAO5H,KAAKC,MAAMqF,kBAC3CsC,EAAoB1C,WAAaA,EACjClF,KAAKC,MAAM4H,uBAAuBD,K,iDAGTE,GACzB,OAAOA,EAAe3I,KAAI,SAAAoI,GACxB,OAAO,kBAAClE,EAAA,EAAD,CAAUC,IAAKiE,EAAchE,MAAOA,MAAOgE,EAAchE,OAAQgE,EAAczF,Y,yCAIvEiG,GACjB,OAAOA,EAAO5I,KAAI,SAAA2C,GAChB,OAAO,kBAACuB,EAAA,EAAD,CAAUC,IAAKxB,EAAMyB,MAAOA,MAAOzB,EAAMyB,OAAQzB,EAAMA,Y,8CAI1C3E,GACtB,OAAOA,EAAMgC,KAAI,SAAA7B,GACf,OAAO,kBAAC+F,EAAA,EAAD,CAAUC,IAAKhG,EAAKC,OAAQgG,MAAOjG,EAAKC,QAASD,EAAK4C,W,+BAIvD,IAAD,OACP,OAAQ,kBAAC,IAAM8H,SAAP,KACN,kBAACC,GAAA,EAAD,CAAMC,UAAW,kBAACC,GAAA,EAAD,iBAAyCnH,UAAWC,KAAMmH,SACzE,kBAACC,GAAA,EAAD,KACE,kBAACnC,GAAA,EAAD,CAAaoC,WAAS,GACpB,kBAAClC,GAAA,EAAD,CAAY9B,GAAG,+BAAf,kBACA,kBAACd,EAAA,EAAD,CAAQ8C,QAAQ,8BAA8BhC,GAAG,wBAAwBf,MAAOvD,KAAKC,MAAMK,sBAAuBoD,SAAU,SAAAlC,GAAK,OAAI,EAAK+G,0BAA0B/G,EAAMoC,OAAOL,SAChLvD,KAAKwI,2BAA2BxI,KAAKC,MAAM6H,mBAIhD,kBAACO,GAAA,EAAD,KACE,kBAACnC,GAAA,EAAD,CAAaoC,WAAS,GACpB,kBAAClC,GAAA,EAAD,CAAY9B,GAAG,sBAAf,SACA,kBAACd,EAAA,EAAD,CAAQ8C,QAAQ,qBAAqBhC,GAAG,eAAef,MAAOvD,KAAKC,MAAM4B,cAAe6B,SAAU,SAAAlC,GAAK,OAAI,EAAKiH,kBAAkBjH,EAAMoC,OAAOL,SAC9IvD,KAAK0I,mBAAmB1I,KAAKC,MAAM8H,YAK1C,kBAACY,GAAA,EAAD,MACA,kBAACV,GAAA,EAAD,KACE,kBAACI,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CAActE,GAAG,2BAA2BuE,QAAQ,WACpD,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,KAAK,MACLtF,SAAU,SAAAlC,GAAK,OAAI,EAAKyH,mBAAmBzH,EAAMoC,OAAOvD,UACxDA,QAASL,KAAKC,MAAM4D,eAAeQ,KACnC6E,WAAY,CAAE,kBAAmB,gCAIvC,kBAACC,GAAA,EAAD,CAAUC,GAAIpJ,KAAKC,MAAM4D,eAAeQ,KAAMgF,QAAQ,OAAOC,eAAa,GACxE,kBAACrB,GAAA,EAAD,KACE,kBAACI,GAAA,EAAD,KACE,kBAACkB,GAAA,EAAD,CAAWhG,MAAOvD,KAAKC,MAAM4D,eAAeC,cAAeJ,SAAU,SAAAlC,GAAK,OAAI,EAAKgI,0BAA0BhI,EAAMoC,OAAOL,QAAQ+E,WAAS,EAAChE,GAAG,kBAAkBxC,MAAM,kBAAkBlF,KAAK,SAASsM,WAAY,CAACO,IAAK,EAAGC,IAAK,IAAKC,gBAAiB,CAACC,QAAQ,SAKxQ,kBAACjB,GAAA,EAAD,MACA,kBAACV,GAAA,EAAD,KACE,kBAACI,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CAActE,GAAG,6BAA6BuE,QAAQ,aACtD,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,KAAK,MACLtF,SAAU,SAAAlC,GAAK,OAAI,EAAKqI,qBAAqBrI,EAAMoC,OAAOvD,UAC1DA,QAASL,KAAKC,MAAMqF,iBAAiBjB,KACrC6E,WAAY,CAAE,kBAAmB,kCAIvC,kBAACC,GAAA,EAAD,CAAUC,GAAIpJ,KAAKC,MAAMqF,iBAAiBjB,KAAMgF,QAAQ,OAAOC,eAAa,GAC1E,kBAACrB,GAAA,EAAD,KACE,kBAACI,GAAA,EAAD,KACE,kBAACkB,GAAA,EAAD,CAAWhG,MAAOvD,KAAKC,MAAMqF,iBAAiBC,aAAc7B,SAAU,SAAAlC,GAAK,OAAI,EAAKsI,yBAAyBtI,EAAMoC,OAAOL,QAAQ+E,WAAS,EAAChE,GAAG,iBAAiBxC,MAAM,iBAAiBlF,KAAK,SAASsM,WAAY,CAACO,IAAK,EAAGC,IAAK,KAAMC,gBAAiB,CAACC,QAAQ,MAEjQ,kBAACvB,GAAA,EAAD,KACE,kBAACnC,GAAA,EAAD,CAAaoC,WAAS,GACpB,kBAAClC,GAAA,EAAD,CAAY9B,GAAG,2BAAf,eACA,kBAACd,EAAA,EAAD,CAAQ8C,QAAQ,0BAA0BhC,GAAG,oBAAoBf,MAAOvD,KAAKC,MAAMqF,iBAAiBJ,WAAYxB,SAAU,SAAAlC,GAAK,OAAI,EAAKuI,uBAAuBvI,EAAMoC,OAAOL,SAC3KvD,KAAKgK,wBAAwBhK,KAAKC,MAAM9C,kB,GAzHnC4E,aA+IhBC,GAAqB,CACzBwF,4BC3KyC,SAAAD,GAAa,OAAI,SAAAtF,GAC1DA,EAAS,CAACrF,K9BOkC,iC8BPIC,QAAS0K,MD2KzDE,oBE5KiC,SAAA3F,GAAK,OAAI,SAAAG,GAC1CA,EAAS,CAACrF,K/BKyB,wB+BLIC,QAASiF,MF4KhD6F,qBG7KkC,SAAA9D,GAAc,OAAI,SAAA5B,GACpDA,EAAS,CAACrF,KhCQ0B,yBgCRIC,QAASgH,MH6KjDgE,uBI9KoC,SAAAvC,GAAgB,OAAI,SAAArD,GACxDA,EAAS,CAACrF,KjCS4B,2BiCTIC,QAASyI,OJgLtC7C,gBAlBS,SAAA/F,GAAK,MAAK,CAChCoL,eAAgBpL,EAAMoL,eACtBC,OAAQrL,EAAMqL,OACdjH,OAAQpE,EAAMoE,OACd3D,MAAOT,EAAMS,MACbmD,sBAAuB5D,EAAM4D,sBAC7BuB,cAAenF,EAAMmF,cACrBgC,eAAgBnH,EAAMmH,eACtByB,iBAAkB5I,EAAM4I,oBAUctD,GAAzBS,CAA6C6E,I,4FKhKtD2C,G,kDACJ,WAAYhK,GAAQ,IAAD,8BACjB,cAAMA,IACDvD,MAAQ,CACXwN,YAAY,EACZC,SAAU,KACVC,cAAc,EACdC,OAAQ,6BAEV,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,iBACtB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,iBACvB,EAAKE,oBAAsB,EAAKA,oBAAoBF,KAAzB,iBAVV,E,+DAaAG,GACjB,IAAMC,EAA2B3K,KAAKC,MAAMnB,sBAAsBT,OAE9DsM,IAD6BD,EAAU5L,sBAAsBT,SAE3DsM,EACF3K,KAAK4K,SAAS,CAACR,cAAc,IAE7BpK,KAAK4K,SAAS,CAACR,cAAc,O,kCAKvB7L,GACVyB,KAAK4K,SAAS,CACZT,SAAU5L,EACV2L,aAAY3L,M,qCAIDiD,GACbxB,KAAK6K,YAAYrJ,EAAMsJ,iB,wCAIvB9K,KAAK6K,YAAY,Q,0CAGCrJ,EAAOuJ,GACV,cAAXA,GAGJ/K,KAAK4K,SAAS,CAACR,cAAc,M,2DAGMtL,EAAuBwB,EAAuB7C,EAAmBuJ,EAAuBlJ,EAAgBX,GAAO,IAAD,OACjJ,OAAO2B,EAAsBK,KAAI,SAAAT,GAC/B,OAAQ,kBAAC2E,EAAA,EAAD,CACEC,IAAG,UAAK5E,EAAUpB,KAAK4C,MAApB,OAA2BxB,EAAUC,eACxC4C,QAAS,kBAAM,EAAKtB,MAAM+K,oDAAoDlM,EAAuBJ,EAAW4B,EAAuB7C,EAAmBuJ,EAAuBlJ,EAAgBX,KAChMuB,EAAUpB,KAAK4C,KAHlB,IAGyBxB,EAAUC,oB,sDAKfG,EAAuBwB,EAAuB7C,EAAmBuJ,EAAuBlJ,EAAgBX,GACtI,OACE,kBAAC,KAAD,CACEgN,SAAUnK,KAAKtD,MAAMyN,SACrBc,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChD7G,GAAItE,KAAKtD,MAAM2N,OACfe,mBAAoB,KACpBC,aAAW,EACXC,gBAAiB,CAAEJ,SAAU,MAAOC,WAAY,SAChDI,KAAMvL,KAAKtD,MAAMwN,WACjBsB,QAASxL,KAAKwK,iBAGZ1L,EAAsBT,OAClB2B,KAAKyL,qCAAqC3M,EAAuBwB,EAAuB7C,EAAmBuJ,EAAuBlJ,EAAgBX,GAElJ,kBAACkG,EAAA,EAAD,uBACkB/C,EADlB,kB,+BAUV,IAAMxB,EAAwBkB,KAAKC,MAAMnB,sBACnCwB,EAAwBN,KAAKC,MAAMK,sBACnC7C,EAAoBuC,KAAKC,MAAMxC,kBAC/BuJ,EAAkD,UAA1B1G,EAAoCN,KAAKC,MAAM6F,kBAAoB9F,KAAKC,MAAM8F,kBACtGjI,EAA2C,UAA1BwC,EAAoCN,KAAKC,MAAMa,OAASd,KAAKC,MAAMc,OACpF5D,EAAQ6C,KAAKC,MAAM9C,MAEzB,OAAQ,yBAAK6D,UAAWC,KAAMxB,sBAE5B,kBAACiM,GAAA,EAAD,CAAYC,aAAW,YACXC,gBAAe5L,KAAKtD,MAAM2N,OAC1BwB,gBAAc,OACdtK,QAASvB,KAAKsK,eACdnJ,MAAM,WAChB,kBAAC2K,GAAA,EAAD,CAAOC,aAAcjN,EAAsBT,OAAQ8C,MAAM,WACvD,kBAAC,KAAD,CAAgB6K,SAAS,cAG7B,kBAACC,GAAA,EAAD,CAAUhB,aAAc,CAACC,SAAU,SAAUC,WAAY,QACvDI,KAAMvL,KAAKtD,MAAM0N,aACjB8B,iBAAkB,IAClBV,QAASxL,KAAKyK,oBACd0B,QACE,kBAAC,IAAMnE,SAAP,KACE,kBAAC,KAAD,CAAgBgE,SAAS,UACxBlN,EAAsBT,OAFzB,gBAE8CiC,EAAwD,IAAjCxB,EAAsBT,OAAe,GAAK,IAF/G,cAIF1B,OACI,kBAAC,IAAMqL,SAAP,KACA,kBAAC0D,GAAA,EAAD,CAAYU,KAAK,QAAQT,aAAW,QAAQxK,MAAM,UAAUI,QAASvB,KAAKyK,qBAC5E,kBAAC,KAAD,CAAWuB,SAAS,cAIvBhM,KAAKqM,gCAAgCvN,EAAuBwB,EAAuB7C,EAAmBuJ,EAAuBlJ,EAAgBX,Q,GAtHhH4E,aAsI9BC,GAAqB,CACzBgJ,oDjBjFiE,SAAClM,EAAuBwN,EAA8BhM,EAAuBiM,EAAuBC,EAA2B1O,EAAgBX,GAA/I,OAAyJ,SAAA8E,GAC1N,IAAMwK,EAAgB,CACpBnP,KAAMJ,GAAoBC,EAAOoP,GACjC7N,UAAWD,GAAqBX,EAAgB0O,GAChD7N,cAAe6N,GAGX/O,EAAoB6O,EAA6BhP,KAAKC,OACtDyJ,EAAwBsF,EAA6B3N,cAEvD+N,EAA2B5N,EAAsBuD,QAAO,SAAA5C,GAE1D,QAD4BA,EAAqBnC,KAAKC,SAAWE,GAAqBgC,EAAqBd,gBAAkBqI,MAG/H0F,EAAyBhN,KAAK+M,GAE/BxK,EAAS,CACRrF,KjBnFwC,6BiBoFxCC,QAASY,IAEVwE,EAAS,CACRrF,KAAgC,UAA1B0D,EjBrFkC,6BAHA,6BiByFxCzD,QAASmK,IAET/E,EAAS,CACPrF,KjB7FyC,gCiB8FzCC,QAAS6P,OiB0DEjK,gBAfS,SAAA/F,GAAK,MAAK,CAChCS,MAAOT,EAAMS,MACb4D,OAAQrE,EAAMqE,OACdD,OAAQpE,EAAMoE,OACdrD,kBAAmBf,EAAMe,kBACzBsI,kBAAmBrJ,EAAMqJ,kBACzBD,kBAAmBpJ,EAAMoJ,kBACzBxF,sBAAuB5D,EAAM4D,sBAC7BxB,sBAAuBpC,EAAMoC,yBAOSkD,GAAzBS,CAA6CwH,I,0CCpItD0C,G,kDACJ,WAAY1M,GAAQ,IAAD,8BACjB,cAAMA,IACDvD,MAAQ,CACXkQ,cAAc,GAEhB,EAAKC,iBAAmB,EAAKA,iBAAiBtC,KAAtB,iBACxB,EAAKuC,kBAAoB,EAAKA,kBAAkBvC,KAAvB,iBANR,E,+DAUjBvK,KAAK4K,SAAS,CAACgC,cAAc,M,0CAG7B5M,KAAK4K,SAAS,CAACgC,cAAc,M,+BAI7B,OAAQ,kBAAC,IAAM5E,SAAP,KACN,kBAAC+E,GAAA,EAAD,CAAQC,SAAS,SACf,kBAACC,GAAA,EAAD,KACE,kBAACvB,GAAA,EAAD,CAAY1C,KAAK,QAAQ7H,MAAM,UAAUwK,aAAW,cAAcpK,QAASvB,KAAK6M,kBAC9E,kBAAC,KAAD,OAEF,yBAAKK,IAAKC,KAAeC,IAAI,iBAAiBpM,UAAWC,KAAMoM,aAC/D,kBAAC,GAAD,MACA,kBAAC,GAAD,QAGJ,kBAACC,GAAA,EAAD,CAAiBC,OAAO,OAAOhC,KAAMvL,KAAKtD,MAAMkQ,aAAcpB,QAASxL,KAAK8M,kBAAmBU,OAAQxN,KAAK6M,kBAC1G,6BACE,kBAACnB,GAAA,EAAD,CAAYnK,QAASvB,KAAK8M,mBACxB,kBAAC,KAAD,QAGJ,kBAACnE,GAAA,EAAD,MACA,kBAAC,GAAD,Y,GApCiB5G,aA4CVU,eAAQ,KAAM,KAAdA,CAAoBkK,I,yCC3D7B/G,G,uKAEF,OAAQ,yBAAK5E,UAAWC,KAAMwM,QAC5B,yBAAKzM,UAAWC,KAAMyM,MACpB,yBAAKR,IAAKC,KAAeC,IAAI,oBAE/B,yBAAKpM,UAAWC,KAAM0M,MACpB,uDAA4B,uBAAGC,KAAK,4DAAR,qC,GAPZ7L,aAmBTU,gBANS,SAAA/F,GAAK,MAAK,KAGP,GAGZ+F,CAA6CmD,I,+BCL7CiI,GArBDC,aAAe,CAC3BC,QAAS,CACPlF,QAAS,CACPmF,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAAS,SAGbC,UAAW,CACTC,UAAW,CACTC,aAAc,CACXC,gBAAiB,eCK1BC,IAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,kCAIf,IACMC,GvBbS,SAAwBC,GACrC,IAAMC,EAAa,CAACC,KACdjS,EAAUC,cAWhB,OAVciS,sBwBCF,SAAClS,GAAD,OAAamS,0BAAgB,CACzCC,OAAQC,YAAcrS,GACtBgC,sBAAuBsQ,EACvBrO,OAAQsO,EACRnM,aAAcoM,EACdlP,UAAWmP,EACXxH,OAAQyH,EACRrS,MAAOsS,EACP3O,OAAQ4O,EACR3J,kBAAmB4J,EACnBlS,kBAAmBmS,EACnB/N,cAAegO,EACf/J,kBAAmBgK,EACnBxP,sBAAuByP,EACvBjI,eAAgBkI,EAChBnM,eAAgBoM,EAChB3K,iBAAkB4K,IxBhBlBC,CAAkBrT,GAClB+R,EACA7R,EACCoT,kBAAe,WAAf,EACItB,EADJ,QAECuB,YAAiBvT,QuBIPwT,CADO,IAuBNC,G,uKAlBX,OAAQ,kBAAC,IAAD,CAAU3B,MAAOA,IACvB,kBAAC,IAAD,CAAiB9R,QAASA,GACxB,kBAAC0T,EAAA,EAAD,CAAe3C,MAAOA,IACpB,kBAAC,GAAD,MACA,yBAAK7M,UAAWC,KAAMwP,KACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAO,EAAMC,KAAK,IAAIC,OAAQ,SAAC3Q,GAAD,OAAY,kBAAC,GAASA,MAC3D,kBAAC,IAAD,CAAOyQ,OAAO,EAAMC,KAAK,aAAaC,OAAQ,SAAC3Q,GAAD,OAAY,kBAAC,GAASA,MACpE,kBAAC,IAAD,CAAO2Q,OAAQ,kBAAO,kBAAC,GAAD,UAExB,kBAACC,GAAD,c,GAZM9O,aEpBZ+O,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnV,QACf6U,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC1FjEC,IAAS3B,OAAO,kBAAC,GAAD,MAAS4B,SAASC,eAAe,SDgB1C,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,aAAwB3B,OAAOC,SAASrD,MACpDgF,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,QAAQ,WAC9B,IAAMxB,EAAK,UAAMsB,aAAN,sBAEP7B,KAgEV,SAAiCO,EAAOC,GAEtCwB,MAAMzB,EAAO,CACX0B,QAAS,CAAE,iBAAkB,YAE5BrB,MAAK,SAAAsB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAM3B,MAAK,SAAAC,GACjCA,EAAa2B,aAAa5B,MAAK,WAC7BV,OAAOC,SAASsC,eAKpBnC,GAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvFAsB,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAM3B,MAAK,WACjCO,QAAQC,IACN,iHAMJd,GAAgBC,EAAOC,OCvC/BE,I,mBCVAjV,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,OAAS,uBAAuB,WAAa,2BAA2B,MAAQ,sBAAsB,KAAO,qBAAqB,YAAc,4BAA4B,eAAiB,+BAA+B,MAAQ,wB,mBCA5TD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,YAAc,+BAA+B,OAAS,4B,mBCAjHD,EAAOC,QAAU,CAAC,EAAI,gBAAgB,EAAI,gBAAgB,EAAI,gBAAgB,EAAI,gBAAgB,EAAI,gBAAgB,EAAI,gBAAgB,EAAI,gBAAgB,EAAI,gBAAgB,EAAI,gBAAgB,EAAI,gBAAgB,GAAK,iBAAiB,GAAK,iBAAiB,KAAO,mBAAmB,OAAS,qBAAqB,YAAc,0BAA0B,MAAQ,oBAAoB,MAAQ,sB,mBCA1YD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,QAAU,6BAA6B,MAAQ,6B,mBCAnJD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,uB,mBCArFD,EAAOC,QAAU,CAAC,SAAW,6B","file":"static/js/main.c5e4e0a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fret\":\"Fret_fret__3zoc6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__3sihV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alternativeSelection\":\"AlternativeSelections_alternativeSelection__2LFg4\",\"selectionListMessage\":\"AlternativeSelections_selectionListMessage__2FBfS\"};","module.exports = __webpack_public_path__ + \"static/media/flowchord-logo-white.2d297776.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBarLogo\":\"MainAppBar_appBarLogo__by6Ui\"};","module.exports = __webpack_public_path__ + \"static/media/flowchord-logo-gray-vertical.be6822f1.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};","import { UPDATE_ALTERNATIVE_SELECTIONS } from 'constants/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_ALTERNATIVE_SELECTIONS:\n\t\t\treturn action.payload;\n    default:\n      return state;\n  }\n}\n","export const SELECT_NOTE = 'SELECT_NOTE';\nexport const DESELECT_NOTE = 'DESELECT_NOTE';\nexport const TOGGLE_SELECTED_NOTES = 'TOGGLE_SELECTED_NOTES';\nexport const UPDATE_CHORDS = 'UPDATE_CHORDS';\nexport const UPDATE_SCALES = 'UPDATE_SCALES';\nexport const UPDATE_ALTERNATIVE_SELECTIONS = 'UPDATE_ALTERNATIVE_SELECTIONS';\nexport const UPDATE_SELECTED_CHORD_NAME = 'UPDATE_SELECTED_CHORD_NAME';\nexport const UPDATE_SELECTED_KEY_NUMBER = 'UPDATE_SELECTED_KEY_NUMBER';\nexport const UPDATE_SELECTED_LABEL = 'UPDATE_SELECTED_LABEL';\nexport const UPDATE_SELECTED_SCALE_NAME = 'UPDATE_SELECTED_SCALE_NAME';\nexport const UPDATE_SELECTED_SELECTION_TYPE = 'UPDATE_SELECTED_SELECTION_TYPE';\nexport const UPDATE_SETTINGS_GUITAR = 'UPDATE_SETTINGS_GUITAR';\nexport const UPDATE_SETTINGS_KEYBOARD = 'UPDATE_SETTINGS_KEYBOARD';\nexport const UPDATE_TUNER_NUMBER = 'UPDATE_TUNER_NUMBER';\n","import { UPDATE_CHORDS } from 'constants/types';\n\nimport chords from 'data/chords.json';\n\nconst initialState = chords;\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_CHORDS:\n\t\t\treturn action.payload;\n    default:\n      return state;\n  }\n}\n","import { UPDATE_TUNER_NUMBER } from 'constants/types';\nimport guitarTuners from 'data/guitar-tuners.json';\n\nconst initialState = guitarTuners;\n\nexport default function(state = initialState, action) {\n\tswitch(action.type) {\n\t\tcase UPDATE_TUNER_NUMBER:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import intervals from 'data/intervals.json';\n\nconst initialState = intervals;\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n","import labels from 'data/labels.json';\n\nconst initialState = labels;\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n","import {\n  SELECT_NOTE,\n  DESELECT_NOTE,\n  TOGGLE_SELECTED_NOTES\n} from 'constants/types';\n\nimport notes from 'data/notes.json';\n\nconst initialState = notes;\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SELECT_NOTE:\n      return action.payload;\n    case DESELECT_NOTE:\n      return action.payload;\n    case TOGGLE_SELECTED_NOTES:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SCALES } from 'constants/types';\n\nimport scales from 'data/scales.json';\n\nconst initialState = scales;\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SCALES:\n\t\t\treturn action.payload;\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SELECTED_CHORD_NAME } from 'constants/types';\n\nconst initialState = '';\n\nexport default function(state = initialState, action) {\n\tswitch(action.type) {\n\t\tcase UPDATE_SELECTED_CHORD_NAME:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { UPDATE_SELECTED_KEY_NUMBER } from 'constants/types';\n\nconst initialState = 0;\n\nexport default function(state = initialState, action) {\n\tswitch(action.type) {\n\t\tcase UPDATE_SELECTED_KEY_NUMBER:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { UPDATE_SELECTED_LABEL } from 'constants/types';\n\nconst initialState = 'key';\n\nexport default function(state = initialState, action) {\n\tswitch(action.type) {\n\t\tcase UPDATE_SELECTED_LABEL:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { UPDATE_SELECTED_SCALE_NAME } from 'constants/types';\n\nconst initialState = '';\n\nexport default function(state = initialState, action) {\n\tswitch(action.type) {\n\t\tcase UPDATE_SELECTED_SCALE_NAME:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { UPDATE_SELECTED_SELECTION_TYPE } from 'constants/types';\n\nconst initialState = \"chord\";\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SELECTED_SELECTION_TYPE:\n\t\t\treturn action.payload;\n    default:\n      return state;\n  }\n}\n","import selectionTypes from 'data/selection-types.json';\n\nconst initialState = selectionTypes;\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SETTINGS_GUITAR } from 'constants/types';\n\nimport settingsGuitar from 'data/settings-guitar.json';\n\nconst initialState = settingsGuitar;\n\nexport default function(state = initialState, action) {\n\tswitch(action.type) {\n\t\tcase UPDATE_SETTINGS_GUITAR:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { UPDATE_SETTINGS_KEYBOARD } from 'constants/types';\n\nimport settingsKeyboard from 'data/settings-keyboard.json';\n\nconst initialState = settingsKeyboard;\n\nexport default function(state = initialState, action) {\n\tswitch(action.type) {\n\t\tcase UPDATE_SETTINGS_KEYBOARD:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","// Dependencies\nimport {createBrowserHistory} from 'history';\nimport {routerMiddleware} from 'connected-react-router';\nimport {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\n// Reducers\nimport createRootReducer from 'reducers';\n\n\nexport const history = createBrowserHistory()\n\nconst composeEnhancers = composeWithDevTools({\n  // options like actionSanitizer, stateSanitizer\n});\n\nexport default function configureStore(preloadedState) {\n  const middleware = [thunk];\n  const history = createBrowserHistory();\n  const store = createStore(\n\t\tcreateRootReducer(history),\n\t\tpreloadedState,\n\t\tcomposeEnhancers(\n\t\t\tapplyMiddleware(\n\t\t\t\t...middleware,\n\t\t\t\trouterMiddleware(history)\n\t\t\t)\n\t\t)\n\t);\n  return store;\n}\n","export const getNoteByNoteNumber = (notes, noteNumber) => {\n  return notes.find(note => {\n    return note.number === noteNumber;\n  })\n}\n\nexport const noteNumberToHalfSteps = (noteNumber, selectedKeyNumber) => {\n  return (noteNumber - selectedKeyNumber) % 12 >= 0 ? (noteNumber - selectedKeyNumber) % 12 : (12 + noteNumber - selectedKeyNumber) % 12;\n}\n\nexport const noteNumbersToHalfSteps = (noteNumbers, selectedKeyNumber) => {\n  return noteNumbers.map(noteNumber => {\n    return noteNumberToHalfSteps(noteNumber, selectedKeyNumber);\n  });\n}\n\nexport const halfStepsToNoteNumber = (halfStep, selectedKeyNumber) => {\n  return (halfStep + selectedKeyNumber) % 12;\n}\n\nexport const halfStepsToNoteNumbers = (halfSteps, selectedKeyNumber) => {\n  return halfSteps.map(halfStep => {\n    return halfStepsToNoteNumber(halfStep, selectedKeyNumber);\n  });\n}\n\nexport const getSelectedNoteNumbersFromNotes = notes => {\n  return notes.filter(note => {\n    return note.selected;\n  }).map(note => {\n    return note.number;\n  });\n}\n","import {\n  UPDATE_CHORDS,\n  UPDATE_SCALES,\n  UPDATE_SELECTED_CHORD_NAME,\n\tUPDATE_SELECTED_SCALE_NAME,\n\tUPDATE_SELECTED_KEY_NUMBER,\n\tUPDATE_ALTERNATIVE_SELECTIONS,\n\tTOGGLE_SELECTED_NOTES\n} from 'constants/types';\n\n\n// Helpers\nimport {\n  getSelectedNoteNumbersFromNotes,\n  getNoteByNoteNumber,\n  noteNumbersToHalfSteps,\n\thalfStepsToNoteNumbers\n} from 'helpers/noteHelpers.js';\n\nconst sortNumber = (a, b) => {\n  return a - b;\n}\n\nconst getMatchedSelection = (noteSelections, selectedHalfSteps) => {\n  return Object.keys(noteSelections).find(noteSelectionName => {\n    const noteSelection = noteSelections[noteSelectionName];\n    return noteSelection.parsedHalfSteps.length === selectedHalfSteps.length && noteSelection.parsedHalfSteps.every((element, index) => {\n      return element === selectedHalfSteps[index];\n    });\n  });\n}\n\nconst getSelectionFromName = (selection, selectionName) => {\n  return selection[selectionName];\n}\n\nconst getAlternativeSelections = (single = false, notes, noteSelections, selectedKeyNumber, selectedHalfSteps) => {\n  let alternativeSelections = [];\n  for (var keyIndex in notes) {\n    if (parseInt(keyIndex) !== selectedKeyNumber) {\n      let relativeKeyIndex = keyIndex - selectedKeyNumber;\n      let relativeParsedHalfSteps = selectedHalfSteps.map(parsedHalfStep => {\n        let relativeParsedHalfStep = parsedHalfStep - relativeKeyIndex;\n        relativeParsedHalfStep = relativeParsedHalfStep >= 0 ? relativeParsedHalfStep : relativeParsedHalfStep + 12;\n        return relativeParsedHalfStep % 12;\n      });\n      relativeParsedHalfSteps.sort(sortNumber).join(',');\n      const matchedSelection = getMatchedSelection(noteSelections, relativeParsedHalfSteps);\n      if (matchedSelection) {\n        const alternativeSelection = {\n          note: notes[keyIndex],\n          selection: getSelectionFromName(noteSelections, matchedSelection),\n          selectionName: matchedSelection\n        };\n        if (single) return alternativeSelection;\n        else alternativeSelections.push(alternativeSelection);\n      }\n    }\n  }\n  return single ? null : alternativeSelections;\n}\n\nexport const updateSelectedChordName = selectedChordName => dispatch => {\n  dispatch({\n    type: UPDATE_SELECTED_CHORD_NAME,\n    payload: selectedChordName\n  })\n}\n\nexport const updateSelectedScaleName = selectedScaleName => dispatch => {\n  dispatch({type: UPDATE_SELECTED_SCALE_NAME, payload: selectedScaleName})\n}\n\nexport const updateSelectedSelectionFromAlternativeSelectionList = (alternativeSelections, selectedAlternativeSelection, selectedSelectionType, prevSelectedKeyNumber, prevSelectedSelectionName, noteSelections, notes) => dispatch => {\n  const prevSelection = {\n    note: getNoteByNoteNumber(notes, prevSelectedKeyNumber),\n    selection: getSelectionFromName(noteSelections, prevSelectedSelectionName),\n    selectionName: prevSelectedSelectionName\n  };\n\n  const selectedKeyNumber = selectedAlternativeSelection.note.number;\n  const selectedSelectionName = selectedAlternativeSelection.selectionName;\n\n  let newAlternativeSelections = alternativeSelections.filter(alternativeSelection => {\n    const isSelectedSelection = alternativeSelection.note.number === selectedKeyNumber && alternativeSelection.selectionName === selectedSelectionName;\n    return !isSelectedSelection;\n  });\n  newAlternativeSelections.push(prevSelection);\n\n\tdispatch({\n\t\ttype: UPDATE_SELECTED_KEY_NUMBER,\n\t\tpayload: selectedKeyNumber\n\t});\n\tdispatch({\n\t\ttype: selectedSelectionType === 'scale' ? UPDATE_SELECTED_SCALE_NAME : UPDATE_SELECTED_CHORD_NAME,\n\t\tpayload: selectedSelectionName\n\t});\n  dispatch({\n    type: UPDATE_ALTERNATIVE_SELECTIONS,\n    payload: newAlternativeSelections\n  });\n}\n\nexport const updateSelectedSelectionSelectList = (notes, selectedKeyNumber, selectedSelectionName, noteSelections, selectedSelectionType) => dispatch => {\n  if (selectedSelectionName && selectedSelectionName.length){\n    const halfSteps = noteSelections[selectedSelectionName].parsedHalfSteps;\n  \tconst relativeHalfSteps = halfStepsToNoteNumbers(halfSteps, selectedKeyNumber);\n  \trelativeHalfSteps.sort(sortNumber).join(',');\n  \tconst newNotes = notes.map(note => {\n  \t\treturn {...note, selected: relativeHalfSteps.includes(note.number)}\n  \t});\n  \tdispatch({\n  \t\ttype: TOGGLE_SELECTED_NOTES,\n  \t\tpayload: newNotes\n  \t});\n\n    const alternativeSelections = getAlternativeSelections(false, notes, noteSelections, selectedKeyNumber, halfSteps);\n    dispatch({\n      type: UPDATE_ALTERNATIVE_SELECTIONS,\n      payload: alternativeSelections\n    });\n  }\n\n\tif (selectedSelectionType === 'key'){\n\t\tdispatch({\n\t\t\ttype: UPDATE_SELECTED_KEY_NUMBER,\n\t\t\tpayload: selectedKeyNumber\n\t\t});\n\t}else {\n\t\tdispatch({\n\t\t\ttype: selectedSelectionType === 'scale' ? UPDATE_SELECTED_SCALE_NAME : UPDATE_SELECTED_CHORD_NAME,\n\t\t\tpayload: selectedSelectionName\n\t\t});\n    if(noteSelections.custom){\n      const newNoteSelections = removeCustomSelection(noteSelections);\n      dispatch({\n        type: selectedSelectionType === 'scale' ? UPDATE_SCALES : UPDATE_CHORDS,\n        payload: newNoteSelections\n      });\n    }\n\t}\n}\n\nconst addCustomSelection = (noteSelections, selectedHalfSteps) =>{\n  return {\n    ...noteSelections,\n    custom: {\n      halfSteps: selectedHalfSteps,\n      parsedHalfSteps: selectedHalfSteps\n    }\n  };\n}\n\nconst removeCustomSelection = noteSelections =>{\n  if (noteSelections.custom){\n      let newNoteSelections = {...noteSelections};\n      delete newNoteSelections[\"custom\"];\n    \treturn newNoteSelections;\n  }else {\n    return noteSelections;\n  }\n}\n\n\nexport const updateSelectedSelectionNameFromNotes = (notes, selectedKeyNumber, noteSelections, selectedSelectionType) => dispatch => {\n  const selectedNoteNumbers = getSelectedNoteNumbersFromNotes(notes);\n  let selectedHalfSteps = noteNumbersToHalfSteps(selectedNoteNumbers, selectedKeyNumber);\n  selectedHalfSteps.sort(sortNumber).join(',');\n  const matchedSelection = getMatchedSelection(noteSelections, selectedHalfSteps);\n\n  if (matchedSelection) {\n\t\tconst alternativeSelections = getAlternativeSelections(false, notes, noteSelections, selectedKeyNumber, selectedHalfSteps);\n    dispatch({\n      type: selectedSelectionType === 'scale' ? UPDATE_SELECTED_SCALE_NAME : UPDATE_SELECTED_CHORD_NAME,\n      payload: matchedSelection\n    });\n\t\tdispatch({\n\t\t\ttype: UPDATE_ALTERNATIVE_SELECTIONS,\n\t\t\tpayload: alternativeSelections\n\t\t});\n    if(noteSelections.custom){\n      const newNoteSelections = removeCustomSelection(noteSelections);\n      dispatch({\n        type: selectedSelectionType === 'scale' ? UPDATE_SCALES : UPDATE_CHORDS,\n        payload: newNoteSelections\n      });\n    }\n  }else {\n\t\tconst alternativeSelection = getAlternativeSelections(true, notes, noteSelections, selectedKeyNumber, selectedHalfSteps);\n\t\tif (alternativeSelection){\n\t\t\tconst alternativeSelectionsToAlternativeSelection = getAlternativeSelections(false, notes, noteSelections, alternativeSelection.note.number, alternativeSelection.selection.parsedHalfSteps);\n\t\t\tdispatch({\n\t      type: selectedSelectionType === 'scale' ? UPDATE_SELECTED_SCALE_NAME : UPDATE_SELECTED_CHORD_NAME,\n\t      payload: alternativeSelection.selectionName\n\t    });\n\t\t\tdispatch({\n\t      type: UPDATE_SELECTED_KEY_NUMBER,\n\t      payload: alternativeSelection.note.number\n\t    });\n\t\t\tdispatch({\n\t      type: UPDATE_ALTERNATIVE_SELECTIONS,\n\t      payload: alternativeSelectionsToAlternativeSelection\n\t    });\n      if(noteSelections.custom){\n        const newNoteSelections = removeCustomSelection(noteSelections);\n        dispatch({\n          type: selectedSelectionType === 'scale' ? UPDATE_SCALES : UPDATE_CHORDS,\n          payload: newNoteSelections\n        });\n      }\n\t\t} else {\n      const newNoteSelections = addCustomSelection(noteSelections, selectedHalfSteps, selectedSelectionType);\n      dispatch({\n        type: selectedSelectionType === 'scale' ? UPDATE_SCALES : UPDATE_CHORDS,\n        payload: newNoteSelections\n      });\n      dispatch({\n\t      type: UPDATE_ALTERNATIVE_SELECTIONS,\n\t      payload: []\n\t    });\n      dispatch({\n        type: selectedSelectionType === 'scale' ? UPDATE_SELECTED_SCALE_NAME : UPDATE_SELECTED_CHORD_NAME,\n        payload: 'custom'\n      });\n    }\n\t}\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Material UI\nimport Button from '@material-ui/core/Button';\n\n// Actions\nimport {toggleNote} from 'actions/NotesActions';\nimport {updateSelectedSelectionNameFromNotes} from 'actions/SelectedSelectionNameActions';\n\n// Helpers\nimport {noteNumberToHalfSteps} from 'helpers/noteHelpers';\n\n// Stylesheets\nimport style from 'components/partials/Note.module.scss';\n\nclass Note extends Component {\n\tgetKeyName(keyNumber){\n\t\treturn this.props.notes[keyNumber].name;\n\t}\n\n  getInterval(halfSteps){\n\t\treturn this.props.intervals[halfSteps];\n\t}\n\n  handleNoteOnClick(checked, noteNumber, selectedKeyNumber, noteSelections, selectedSelectionType){\n    const newNotes = this.props.toggleNote(noteNumber, checked);\n    this.props.updateSelectedSelectionNameFromNotes(newNotes, selectedKeyNumber, noteSelections, selectedSelectionType);\n  }\n\n  render() {\n    const keyNumber = this.props.keyNumber;\n    const keyName = this.getKeyName(keyNumber);\n    const note = this.props.note;\n    const halfSteps = noteNumberToHalfSteps(keyNumber, this.props.selectedKeyNumber);\n    const interval = this.getInterval(halfSteps);\n\n    const label = () => {\n      switch(this.props.selectedLabel) {\n        case 'key':\n          return keyName;\n        case 'interval':\n          return interval;\n        case 'halfSteps':\n          return halfSteps;\n        default:\n          return '';\n      }\n    }\n    const noteSelections = this.props.selectedSelectionType === 'scale' ? this.props.scales : this.props.chords;\n\n    return (<div className={style.note}>\n          <Button color=\"default\"\n                  disableElevation\n                  variant={note.selected ? 'contained' : 'text'}\n                  onClick={event => this.handleNoteOnClick(!note.selected, keyNumber, this.props.selectedKeyNumber, noteSelections, this.props.selectedSelectionType)}\n                  className={`${style.button} ${note.selected ? style[halfSteps] : style.notSelected} ${this.props.keyColor ? style[this.props.keyColor] : ''}`}\n                  >\n                    {label()}\n          </Button>\n\t</div>)\n  }\n}\n\nNote.propTypes = {\n  note: PropTypes.object,\n  keyNumber: PropTypes.number,\n\tkeyColor: PropTypes.string\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes,\n  chords: state.chords,\n  scales: state.scales,\n  intervals: state.intervals,\n  selectedSelectionType: state.selectedSelectionType,\n  selectedLabel: state.selectedLabel,\n  selectedKeyNumber: state.selectedKeyNumber\n});\n\nconst mapDispatchToProps = {\n    toggleNote,\n    updateSelectedSelectionNameFromNotes\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Note);\n","import {SELECT_NOTE, DESELECT_NOTE} from 'constants/types';\n\nexport const toggleNote = (noteNumber, checked) => (dispatch, getState) => {\n  const notes = getState() && getState().notes;\n  let newNotes = [...notes];\n  newNotes[noteNumber].selected = checked;\n  dispatch({type: checked ? SELECT_NOTE : DESELECT_NOTE, payload: newNotes});\n  return newNotes;\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Components\nimport Note from 'components/partials/Note';\n\n// Stylesheets\nimport style from 'components/partials/instruments/Guitar/Fret.module.scss';\n\n\nclass Fret extends Component {\n\n\tgetKeyNumber(fretNumber, tunerNumber){\n\t\treturn (fretNumber + tunerNumber) % 12;\n\t}\n\n  render() {\n    const keyNumber = this.getKeyNumber(this.props.fretNumber, this.props.tunerNumber);\n    const note = this.props.notes[keyNumber];\n\n    return (<div className={style.fret}>\n        <Note note={note} keyNumber={keyNumber} />\n      </div>)\n  }\n}\n\nFret.propTypes = {\n  fretNumber: PropTypes.number,\n  tunerNumber: PropTypes.number,\n  stringNumber: PropTypes.number\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes,\n});\n\nexport default connect(mapStateToProps, null)(Fret);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Material UI\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// Components\nimport Fret from 'components/partials/instruments/Guitar/Fret';\n\n// Actions\nimport { updateTunerNumber, updateGuitarTuners} from 'actions/GuitarTunersActions';\n\n// Stylesheets\nimport style from 'components/partials/instruments/Guitar.module.scss';\n\nclass Guitar extends Component {\n\n  handleTunerChange(stringNumber, tunerNumber){\n    this.props.updateTunerNumber(stringNumber, tunerNumber)\n  }\n  renderTunerElements(guitarTuners, notes){\n    return guitarTuners && guitarTuners.length\n      ? guitarTuners.map((tuner, stringNumber) => {\n        const optionElements = notes.map(note => {\n          return <MenuItem key={`noteNumber-${note.number}`} value={note.number}>{note.name}</MenuItem>\n        });\n        return (<div key={`${stringNumber}-${tuner.number}`} className={style.tuner}>\n          <Select value={tuner.number} className={style.tunerSelect} onChange={(event) => this.handleTunerChange(stringNumber, parseInt(event.target.value))}>\n            {optionElements}\n          </Select>\n          <div className={style.fret}>\n            <Fret fretNumber={0} tunerNumber={tuner.number} stringNumber={parseInt(stringNumber)} />\n          </div>\n        </div>)\n      })\n      : '';\n  }\n\n  renderFretNumbers(settingsGuitar){\n    const numberOfFrets = settingsGuitar && settingsGuitar.numberOfFrets ? settingsGuitar.numberOfFrets : null;\n    let fretNumbers = [];\n    if (numberOfFrets){\n      let fretNumber = 1;\n        while (fretNumber <= numberOfFrets){\n        fretNumbers.push(<div key={`fretNumber-${fretNumber}`} className={`${style.fret} ${style.fretnumber}`}>{fretNumber}</div>);\n        fretNumber++;\n      }\n    }\n    return fretNumbers;\n  }\n\n  renderFrets(settingsGuitar, tuner, stringNumber){\n    const numberOfFrets = settingsGuitar && settingsGuitar.numberOfFrets ? settingsGuitar.numberOfFrets : null;\n    let frets = [];\n    if (numberOfFrets){\n      let fretNumber = 1;\n        while (fretNumber <= numberOfFrets){\n        frets.push(<div key={`fret-${fretNumber}`} className={`${style.fret} ${fretNumber === 1 ? style.firstFret : ''}`}>\n          <Fret fretNumber={fretNumber} tunerNumber={tuner.number} stringNumber={stringNumber} />\n        </div>);\n        fretNumber++;\n      }\n    }\n    return frets;\n  }\n\n  renderGuitarNeck(settingsGuitar, guitarTuners){\n    return guitarTuners && guitarTuners.length\n      ? guitarTuners.map((tuner, stringNumber) => {\n          return (<div key={`${tuner.number}-${stringNumber}`} className={style.string}>{this.renderFrets(settingsGuitar, tuner, parseInt(stringNumber))}</div>)\n        })\n      : '';\n  }\n\n  render() {\n    return this.props.settingsGuitar && this.props.settingsGuitar.show\n      ? (<div id=\"guitar\" className={`${style.guitar} ${style.active}`}>\n  \t\t<div className={`${style.instrumentView} ${style.fretboard}`}>\n  \t\t\t<div className={style.tuners}>\n  \t\t\t\t<div className={`${style.fret} ${style.fretnumber}`}>\n  \t\t\t\t\tFretno.\n  \t\t\t\t</div>\n          {this.renderTunerElements(this.props.guitarTuners, this.props.notes)}\n  \t\t\t</div>\n  \t\t\t<div className={style.frets}>\n          {this.renderFretNumbers(this.props.settingsGuitar)}\n          {this.renderGuitarNeck(this.props.settingsGuitar, this.props.guitarTuners)}\n  \t\t\t</div>\n  \t\t</div>\n  \t</div>) : ''\n  }\n}\n\nconst mapStateToProps = state => ({\n  settingsGuitar: state.settingsGuitar,\n  guitarTuners: state.guitarTuners,\n  notes: state.notes\n});\n\nconst mapDispatchToProps = {\n    updateTunerNumber,\n    updateGuitarTuners\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Guitar);\n","import {UPDATE_TUNER_NUMBER} from 'constants/types';\n\nexport const updateTunerNumber = (stringNumber, tunerNumber) => (dispatch, getState) => {\n  const guitarTuners = getState() && getState().guitarTuners;\n  let newGuitarTuners = [...guitarTuners];\n  newGuitarTuners[stringNumber].number = tunerNumber;\n  dispatch({type: UPDATE_TUNER_NUMBER, payload: newGuitarTuners})\n}\n\nexport const updateGuitarTuners = guitarTuners => dispatch => {\n  dispatch({type: UPDATE_TUNER_NUMBER, payload: guitarTuners})\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Components\nimport Note from 'components/partials/Note';\n\n// Stylesheets\nimport style from 'components/partials/instruments/Keyboard/KeyboardKey.module.scss';\n\n\nclass KeyboardKey extends Component {\n\n\tgetKeyNumber(keyIndex, lowestNote){\n\t\treturn (keyIndex + lowestNote) % 12;\n\t}\n\n  render() {\n    const keyNumber = this.getKeyNumber(this.props.keyIndex, this.props.lowestNote);\n    const note = this.props.notes[keyNumber];\n    const keyColor = note.keycolor;\n\n    return (<div className={`${style.keyboardKey} ${style[keyColor]}`}>\n      <div className={style.keyName}>\n        <Note note={note} keyNumber={keyNumber} keyColor={keyColor} />\n      </div>\n      </div>)\n  }\n}\n\nKeyboardKey.propTypes = {\n  keyIndex: PropTypes.number,\n  lowestNote: PropTypes.number,\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes\n});\n\nexport default connect(mapStateToProps, null)(KeyboardKey);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Components\nimport KeyboardKey from 'components/partials/instruments/Keyboard/KeyboardKey';\n\n// Stylesheets\nimport style from 'components/partials/instruments/Keyboard.module.scss';\n\nclass Keyboard extends Component {\n  renderKeys(settingsKeyboard){\n    const numberOfKeys = settingsKeyboard && settingsKeyboard.numberOfKeys ? settingsKeyboard.numberOfKeys : 0;\n    const lowestNote = settingsKeyboard && settingsKeyboard.lowestNote ? settingsKeyboard.lowestNote : 0;\n    let keys = [];\n    if (numberOfKeys){\n      let keyIndex = 0;\n      while (keyIndex < numberOfKeys){\n        keys.push(<KeyboardKey key={`key-${keyIndex}`} keyIndex={keyIndex} lowestNote={lowestNote} />);\n        keyIndex++;\n      }\n    }\n    return keys;\n  }\n\n  render() {\n    return this.props.settingsKeyboard && this.props.settingsKeyboard.show\n      ? (<div id=\"keyboard\" className={`${style.keyboard} ${style.active}`}>\n        {this.renderKeys(this.props.settingsKeyboard)}\n\t</div>) : ''\n  }\n}\n\nconst mapStateToProps = state => ({\n  settingsKeyboard: state.settingsKeyboard,\n  notes: state.notes\n});\n\nexport default connect(mapStateToProps, null)(Keyboard);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Components\nimport Guitar from 'components/partials/instruments/Guitar';\nimport Keyboard from 'components/partials/instruments/Keyboard';\n\n\nclass Home extends Component {\n\n    render() {\n        return (<div>\n            <Guitar />\n            <Keyboard />\n        </div>)\n    }\n}\n\nexport default connect(null, null)(Home);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nclass NotFound extends Component {\n\n    render() {\n        return (<div>\n            <h1>404</h1>\n            <p>Siden finnes ikke</p>\n        </div>)\n    }\n}\n\nexport default connect(null, null)(NotFound);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Material UI\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n// Actions\nimport {updateSelectedKeyNumber} from 'actions/SelectedKeyNumberActions';\nimport {updateSelectedChordName, updateSelectedScaleName, updateSelectedSelectionSelectList} from 'actions/SelectedSelectionNameActions';\n\n// Stylesheets\nimport style from 'components/partials/Selection.module.scss';\n\nclass Selection extends Component {\n\n  handleKeyChange(keyNumber){\n    this.props.updateSelectedSelectionSelectList(\n      this.props.notes,\n      keyNumber,\n      this.props.selectedSelectionType === 'scale' ? this.props.selectedScaleName : this.props.selectedChordName,\n      this.props.selectedSelectionType === 'scale' ? this.props.scales : this.props.chords,\n      'key'\n    );\n  }\n\n  handleChordChange(chordName){\n    this.props.updateSelectedSelectionSelectList(\n      this.props.notes,\n      this.props.selectedKeyNumber,\n      chordName,\n      this.props.chords,\n      'chord'\n    );\n  }\n\n  handleScaleChange(scaleName){\n    this.props.updateSelectedSelectionSelectList(\n      this.props.notes,\n      this.props.selectedKeyNumber,\n      scaleName,\n      this.props.scales,\n      'scale'\n    );\n  }\n\n  renderKeyOptions(notes){\n    return notes.map(note => {\n      return <MenuItem value={note.number} key={note.number}>{note.name}</MenuItem>;\n    })\n  }\n\n  renderChordOptions(chords){\n    return Object.keys(chords).map(chordName => {\n      return <MenuItem key={chordName} value={chordName}>{chordName}</MenuItem>;\n    })\n  }\n\n  renderScaleOptions(scales){\n    return Object.keys(scales).map(scaleName => {\n      return <MenuItem key={scaleName} value={scaleName}>{scaleName}</MenuItem>;\n    })\n  }\n\n  render() {\n    return (<div className={style.selection}>\n      <FormControl className={style.formControl}>\n        <InputLabel id=\"key-select-label\">Key</InputLabel>\n        <Select className={style.select} labelId=\"key-select-label\" id=\"key-select\" value={this.props.selectedKeyNumber} onChange={event => this.handleKeyChange(parseInt(event.target.value))}>\n        {this.renderKeyOptions(this.props.notes)}\n        </Select>\n      </FormControl>\n      {\n        this.props.selectedSelectionType === 'chord'\n          ? (<FormControl className={style.formControl}>\n            <InputLabel id=\"chord-select-label\">Chord</InputLabel>\n            <Select className={style.select}\n                    labelId=\"chord-select-label\"\n                    id=\"chord-select\"\n                    value={this.props.selectedChordName}\n                    onChange={event => this.handleChordChange(event.target.value)}>\n            {this.renderChordOptions(this.props.chords)}\n            </Select>\n          </FormControl>)\n          : (<FormControl className={style.formControl}>\n            <InputLabel id=\"scale-select-label\">Scale</InputLabel>\n            <Select className={style.select} labelId=\"scale-select-label\" id=\"scale-select\" value={this.props.selectedScaleName} onChange={event => this.handleScaleChange(event.target.value)}>\n            {this.renderScaleOptions(this.props.scales)}\n            </Select>\n          </FormControl>)\n      }\n    </div>)\n  }\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes,\n  chords: state.chords,\n  scales: state.scales,\n  selectedKeyNumber: state.selectedKeyNumber,\n  selectedChordName: state.selectedChordName,\n  selectedScaleName: state.selectedScaleName,\n  selectedSelectionType: state.selectedSelectionType\n});\n\nconst mapDispatchToProps = {\n  updateSelectedKeyNumber,\n  updateSelectedChordName,\n  updateSelectedScaleName,\n  updateSelectedSelectionSelectList\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);\n","import {UPDATE_SELECTED_KEY_NUMBER} from 'constants/types';\n\nexport const updateSelectedKeyNumber = selectedKeyNumber => dispatch => {\n  dispatch({type: UPDATE_SELECTED_KEY_NUMBER, payload: selectedKeyNumber})\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Material UI\nimport Collapse from '@material-ui/core/Collapse';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\n\n\n// Actions\nimport {updateSelectedSelectionType} from 'actions/SelectedSelectionTypeActions';\nimport {updateSelectedLabel} from 'actions/SelectedLabelActions';\nimport {updateSettingsGuitar} from 'actions/SettingsGuitarActions';\nimport {updateSettingsKeyboard} from 'actions/SettingsKeyboardActions';\n\n// Stylesheets\nimport style from 'components/partials/Options.module.scss';\n\nclass Options extends Component {\n\n  handleSelectionTypeChange(selectionType){\n    this.props.updateSelectedSelectionType(selectionType);\n  }\n\n  handleLabelChange(label){\n    this.props.updateSelectedLabel(label);\n  }\n\n  handleToggleGuitar(show){\n    const newSettingsGuitar = {...this.props.settingsGuitar};\n    newSettingsGuitar.show = show;\n    this.props.updateSettingsGuitar(newSettingsGuitar)\n  }\n\n  handleNumberOfFretsChange(numberOfFrets){\n    const newSettingsGuitar = {...this.props.settingsGuitar};\n    newSettingsGuitar.numberOfFrets = numberOfFrets;\n    this.props.updateSettingsGuitar(newSettingsGuitar)\n  }\n\n  handleToggleKeyboard(show){\n    const newSettingsKeyboard = {...this.props.settingsKeyboard};\n    newSettingsKeyboard.show = show;\n    this.props.updateSettingsKeyboard(newSettingsKeyboard)\n  }\n\n  handleNumberOfKeysChange(numberOfKeys){\n    const newSettingsKeyboard = {...this.props.settingsKeyboard};\n    newSettingsKeyboard.numberOfKeys = numberOfKeys;\n    this.props.updateSettingsKeyboard(newSettingsKeyboard)\n  }\n\n  handleLowestNoteChange(lowestNote){\n    const newSettingsKeyboard = {...this.props.settingsKeyboard};\n    newSettingsKeyboard.lowestNote = lowestNote;\n    this.props.updateSettingsKeyboard(newSettingsKeyboard)\n  }\n\n  renderSelectionTypeOptions(selectionTypes){\n    return selectionTypes.map(selectionType => {\n      return <MenuItem key={selectionType.value} value={selectionType.value}>{selectionType.label}</MenuItem>;\n    })\n  }\n\n  renderLabelOptions(labels){\n    return labels.map(label => {\n      return <MenuItem key={label.value} value={label.value}>{label.label}</MenuItem>;\n    })\n  }\n\n  renderLowestNoteOptions(notes){\n    return notes.map(note => {\n      return <MenuItem key={note.number} value={note.number}>{note.name}</MenuItem>;\n    })\n  }\n\n  render() {\n    return (<React.Fragment>\n      <List subheader={<ListSubheader>Settings</ListSubheader>} className={style.options}>\n        <ListItem>\n          <FormControl fullWidth>\n            <InputLabel id=\"selection-type-select-label\">Selection type</InputLabel>\n            <Select labelId=\"selection-type-select-label\" id=\"selection-type-select\" value={this.props.selectedSelectionType} onChange={event => this.handleSelectionTypeChange(event.target.value)}>\n            {this.renderSelectionTypeOptions(this.props.selectionTypes)}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <FormControl fullWidth>\n            <InputLabel id=\"label-select-label\">Label</InputLabel>\n            <Select labelId=\"label-select-label\" id=\"label-select\" value={this.props.selectedLabel} onChange={event => this.handleLabelChange(event.target.value)}>\n            {this.renderLabelOptions(this.props.labels)}\n            </Select>\n          </FormControl>\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        <ListItem>\n          <ListItemText id=\"switch-list-label-guitar\" primary=\"Guitar\" />\n          <ListItemSecondaryAction>\n            <Switch\n              edge=\"end\"\n              onChange={event => this.handleToggleGuitar(event.target.checked)}\n              checked={this.props.settingsGuitar.show}\n              inputProps={{ 'aria-labelledby': 'switch-list-label-guitar' }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={this.props.settingsGuitar.show} timeout=\"auto\" unmountOnExit>\n          <List>\n            <ListItem>\n              <TextField value={this.props.settingsGuitar.numberOfFrets} onChange={event => this.handleNumberOfFretsChange(event.target.value)} fullWidth id=\"number-of-frets\" label=\"Number of frets\" type=\"number\" inputProps={{min: 0, max: 50}} InputLabelProps={{shrink: true}} />\n            </ListItem>\n          </List>\n        </Collapse>\n      </List>\n      <Divider />\n      <List>\n        <ListItem>\n          <ListItemText id=\"switch-list-label-keyboard\" primary=\"Keyboard\" />\n          <ListItemSecondaryAction>\n            <Switch\n              edge=\"end\"\n              onChange={event => this.handleToggleKeyboard(event.target.checked)}\n              checked={this.props.settingsKeyboard.show}\n              inputProps={{ 'aria-labelledby': 'switch-list-label-keyboard' }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={this.props.settingsKeyboard.show} timeout=\"auto\" unmountOnExit>\n          <List>\n            <ListItem>\n              <TextField value={this.props.settingsKeyboard.numberOfKeys} onChange={event => this.handleNumberOfKeysChange(event.target.value)} fullWidth id=\"number-of-keys\" label=\"Number of keys\" type=\"number\" inputProps={{min: 0, max: 120}} InputLabelProps={{shrink: true}} />\n            </ListItem>\n            <ListItem>\n              <FormControl fullWidth>\n                <InputLabel id=\"lowestNote-select-label\">Lowest note</InputLabel>\n                <Select labelId=\"lowestNote-select-label\" id=\"lowestNote-select\" value={this.props.settingsKeyboard.lowestNote} onChange={event => this.handleLowestNoteChange(event.target.value)}>\n                {this.renderLowestNoteOptions(this.props.notes)}\n                </Select>\n              </FormControl>\n            </ListItem>\n          </List>\n        </Collapse>\n      </List>\n    </React.Fragment>)\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectionTypes: state.selectionTypes,\n  labels: state.labels,\n  scales: state.scales,\n  notes: state.notes,\n  selectedSelectionType: state.selectedSelectionType,\n  selectedLabel: state.selectedLabel,\n  settingsGuitar: state.settingsGuitar,\n  settingsKeyboard: state.settingsKeyboard\n});\n\nconst mapDispatchToProps = {\n  updateSelectedSelectionType,\n  updateSelectedLabel,\n  updateSettingsGuitar,\n  updateSettingsKeyboard\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options);\n","import {UPDATE_SELECTED_SELECTION_TYPE} from 'constants/types';\n\nexport const updateSelectedSelectionType = selectionType => dispatch => {\n  dispatch({type: UPDATE_SELECTED_SELECTION_TYPE, payload: selectionType})\n}\n","import {UPDATE_SELECTED_LABEL} from 'constants/types';\n\nexport const updateSelectedLabel = label => dispatch => {\n  dispatch({type: UPDATE_SELECTED_LABEL, payload: label})\n}\n","import {UPDATE_SETTINGS_GUITAR} from 'constants/types';\n\nexport const updateSettingsGuitar = settingsGuitar => dispatch => {\n  dispatch({type: UPDATE_SETTINGS_GUITAR, payload: settingsGuitar})\n}\n","import {UPDATE_SETTINGS_KEYBOARD} from 'constants/types';\n\nexport const updateSettingsKeyboard = settingsKeyboard => dispatch => {\n  dispatch({type: UPDATE_SETTINGS_KEYBOARD, payload: settingsKeyboard})\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Material UI\nimport Badge from '@material-ui/core/Badge';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\n\n// Actions\nimport {updateSelectedSelectionFromAlternativeSelectionList} from 'actions/SelectedSelectionNameActions';\n\n// Stylesheets\nimport style from 'components/partials/AlternativeSelections.module.scss';\n\nclass AlternativeSelections extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isListOpen: false,\n      anchorEl: null,\n      showSnackbar: false,\n      listId: 'alternativeSelectionsList'\n    };\n    this.handleListOpen = this.handleListOpen.bind(this);\n    this.handleListClose = this.handleListClose.bind(this);\n    this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const hasAlternativeSelections = this.props.alternativeSelections.length;\n    const hadAlternativeSelections = prevProps.alternativeSelections.length;\n    if (hasAlternativeSelections !== hadAlternativeSelections) {\n      if (hasAlternativeSelections) {\n        this.setState({showSnackbar: true});\n      } else {\n        this.setState({showSnackbar: false});\n      }\n    }\n  }\n\n  setAnchorEl(element){\n    this.setState({\n      anchorEl: element,\n      isListOpen: element ? true : false\n    });\n  }\n\n  handleListOpen(event) {\n    this.setAnchorEl(event.currentTarget);\n  }\n\n  handleListClose() {\n    this.setAnchorEl(null);\n  }\n\n  handleSnackbarClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({showSnackbar: false});\n  };\n\n  renderAlternativeSelectionsListItems(alternativeSelections, selectedSelectionType, selectedKeyNumber, selectedSelectionName, noteSelections, notes){\n    return alternativeSelections.map(selection => {\n      return (<MenuItem\n                key={`${selection.note.name}${selection.selectionName}`}\n                onClick={() => this.props.updateSelectedSelectionFromAlternativeSelectionList(alternativeSelections, selection, selectedSelectionType, selectedKeyNumber, selectedSelectionName, noteSelections, notes)}>\n                {selection.note.name} {selection.selectionName}\n             </MenuItem>)\n    })\n  }\n\n  renderAlternativeSelectionsList(alternativeSelections, selectedSelectionType, selectedKeyNumber, selectedSelectionName, noteSelections, notes){\n    return (\n      <Menu\n        anchorEl={this.state.anchorEl}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        id={this.state.listId}\n        getContentAnchorEl={null}\n        keepMounted\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={this.state.isListOpen}\n        onClose={this.handleListClose}\n        >\n        {\n          alternativeSelections.length\n            ? this.renderAlternativeSelectionsListItems(alternativeSelections, selectedSelectionType, selectedKeyNumber, selectedSelectionName, noteSelections, notes)\n            : (\n              <MenuItem>\n                No alternative {selectedSelectionType}s available\n              </MenuItem>\n            )\n        }\n      </Menu>\n    );\n  }\n\n  render() {\n    const alternativeSelections = this.props.alternativeSelections;\n    const selectedSelectionType = this.props.selectedSelectionType;\n    const selectedKeyNumber = this.props.selectedKeyNumber;\n    const selectedSelectionName = selectedSelectionType === 'scale' ? this.props.selectedScaleName : this.props.selectedChordName;\n    const noteSelections = selectedSelectionType === 'scale' ? this.props.scales : this.props.chords;\n    const notes = this.props.notes;\n\n    return (<div className={style.alternativeSelection}>\n\n      <IconButton aria-label=\"Show more\"\n                  aria-controls={this.state.listId}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleListOpen}\n                  color=\"inherit\">\n        <Badge badgeContent={alternativeSelections.length} color=\"primary\">\n          <QueueMusicIcon fontSize=\"default\"/>\n        </Badge>\n      </IconButton>\n      <Snackbar anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n        open={this.state.showSnackbar}\n        autoHideDuration={6000}\n        onClose={this.handleSnackbarClose}\n        message={\n          <React.Fragment>\n            <QueueMusicIcon fontSize=\"small\"/>\n            {alternativeSelections.length} alternative {selectedSelectionType}{alternativeSelections.length === 1 ? '' : 's'} available\n          </React.Fragment>}\n        action={\n            <React.Fragment>\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleSnackbarClose}>\n          <CloseIcon fontSize=\"small\"/>\n        </IconButton>\n      </React.Fragment>}\n    />\n      {this.renderAlternativeSelectionsList(alternativeSelections, selectedSelectionType, selectedKeyNumber, selectedSelectionName, noteSelections, notes)}\n    </div>)\n  }\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes,\n  chords: state.chords,\n  scales: state.scales,\n  selectedKeyNumber: state.selectedKeyNumber,\n  selectedChordName: state.selectedChordName,\n  selectedScaleName: state.selectedScaleName,\n  selectedSelectionType: state.selectedSelectionType,\n  alternativeSelections: state.alternativeSelections\n});\n\nconst mapDispatchToProps = {\n  updateSelectedSelectionFromAlternativeSelectionList\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlternativeSelections);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Material-UI\nimport AppBar from '@material-ui/core/AppBar';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\n// Components\nimport Selection from 'components/partials/Selection';\nimport Options from 'components/partials/Options';\nimport AlternativeSelections from 'components/partials/AlternativeSelections';\n\n// Assets\nimport FlowChordLogo from 'assets/svg/flowchord-logo-white.svg';\n\n// Stylesheets\nimport style from 'components/partials/MainAppBar.module.scss';\n\nclass MainAppBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDrawerOpen: false\n    };\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n    this.handleDrawerClose = this.handleDrawerClose.bind(this);\n  }\n\n  handleDrawerOpen() {\n    this.setState({isDrawerOpen: true});\n  };\n  handleDrawerClose() {\n    this.setState({isDrawerOpen: false});\n  };\n\n  render() {\n    return (<React.Fragment>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"Open drawer\" onClick={this.handleDrawerOpen}>\n            <MenuIcon/>\n          </IconButton>\n          <img src={FlowChordLogo} alt=\"FlowChord logo\" className={style.appBarLogo} />\n          <Selection/>\n          <AlternativeSelections />\n        </Toolbar>\n      </AppBar>\n      <SwipeableDrawer anchor='left' open={this.state.isDrawerOpen} onClose={this.handleDrawerClose} onOpen={this.handleDrawerOpen}>\n        <div>\n          <IconButton onClick={this.handleDrawerClose}>\n            <ChevronLeftIcon/>\n          </IconButton>\n        </div>\n        <Divider/>\n        <Options/>\n      </SwipeableDrawer>\n    </React.Fragment>);\n  }\n}\n\n\n\nexport default connect(null, null)(MainAppBar);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Assets\nimport FlowChordLogo from 'assets/svg/flowchord-logo-gray-vertical.svg';\n\n// Stylesheets\nimport style from 'components/partials/Footer.module.scss';\n\nclass Selection extends Component {\n  render() {\n    return (<div className={style.footer}>\n      <div className={style.logo}>\n        <img src={FlowChordLogo} alt=\"FlowChord logo\" />\n      </div>\n      <div className={style.text}>\n        <p>FlowChord licensed under <a href=\"https://github.com/flowgig/FlowChord/blob/master/LICENSE\">GNU General Public License</a></p>\n      </div>\n    </div>)\n  }\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#C32A22',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    background: {\n      default: '#fff',\n    }\n  },\n  overrides: {\n    MuiAppBar: { // Name of the component ⚛️ / style sheet\n      colorPrimary: { // Name of the rule\n         backgroundColor: '#272b2f', // Some CSS\n      },\n    },\n  },\n});\n\nexport default theme;\n","// Dependecies\nimport React, { Component } from 'react';\nimport {Provider} from 'react-redux';\nimport {Route, Switch} from 'react-router';\nimport {ConnectedRouter} from 'connected-react-router';\nimport WebFont from 'webfontloader';\nimport { ThemeProvider } from '@material-ui/styles';\n\n// Utils\nimport configureStore, {history} from 'utils/configureStore';\n\n// Routes\nimport Home from 'components/routes/Home';\nimport NotFound from 'components/routes/NotFound';\n\n// Partials\nimport MainAppBar from 'components/partials/MainAppBar';\nimport Footer from 'components/partials/Footer';\n\n// Stylesheets\nimport style from 'App.module.scss';\nimport theme from 'theme';\n\nWebFont.load({\n  google: {\n    families: ['Roboto:400,700&display=swap']\n  }\n});\n\nconst initialState = {};\nconst store = configureStore(initialState);\n\nclass App extends Component {\n  render() {\n    return (<Provider store={store}>\n      <ConnectedRouter history={history}>\n        <ThemeProvider theme={theme}>\n          <MainAppBar />\n          <div className={style.app}>\n            <Switch>\n              <Route exact={true} path=\"/\" render={(props) => (<Home {...props}/>)}/>\n              <Route exact={true} path=\"/FlowChord\" render={(props) => (<Home {...props}/>)}/>\n              <Route render={() => (<NotFound/>)}/>\n            </Switch>\n            <Footer />\n          </div>\n        </ThemeProvider>\n      </ConnectedRouter>\n    </Provider>);\n  }\n}\n\nexport default App;\n","// Dependencies\nimport {combineReducers} from 'redux';\nimport {connectRouter} from 'connected-react-router';\n\n// Reducers\nimport AlternativeSelectionsReducer from 'reducers/AlternativeSelectionsReducer';\nimport ChordsReducer from 'reducers/ChordsReducer';\nimport GuitarTunersReducer from 'reducers/GuitarTunersReducer';\nimport IntervalsReducer from 'reducers/IntervalsReducer';\nimport LabelsReducer from 'reducers/LabelsReducer';\nimport NotesReducer from 'reducers/NotesReducer';\nimport ScalesReducer from 'reducers/ScalesReducer';\nimport SelectedChordNameReducer from 'reducers/SelectedChordNameReducer';\nimport SelectedKeyNumberReducer from 'reducers/SelectedKeyNumberReducer';\nimport SelectedLabelReducer from 'reducers/SelectedLabelReducer';\nimport SelectedScaleNameReducer from 'reducers/SelectedScaleNameReducer';\nimport SelectedSelectionTypeReducer from 'reducers/SelectedSelectionTypeReducer';\nimport SelectionTypesReducer from 'reducers/SelectionTypesReducer';\nimport SettingsGuitarReducer from 'reducers/SettingsGuitarReducer';\nimport SettingsKeyboardReducer from 'reducers/SettingsKeyboardReducer';\n\nexport default(history) => combineReducers({\n  router: connectRouter(history),\n  alternativeSelections: AlternativeSelectionsReducer,\n  chords: ChordsReducer,\n  guitarTuners: GuitarTunersReducer,\n  intervals: IntervalsReducer,\n  labels: LabelsReducer,\n  notes: NotesReducer,\n  scales: ScalesReducer,\n  selectedChordName: SelectedChordNameReducer,\n  selectedKeyNumber: SelectedKeyNumberReducer,\n  selectedLabel: SelectedLabelReducer,\n  selectedScaleName: SelectedScaleNameReducer,\n  selectedSelectionType: SelectedSelectionTypeReducer,\n  selectionTypes: SelectionTypesReducer,\n  settingsGuitar: SettingsGuitarReducer,\n  settingsKeyboard: SettingsKeyboardReducer\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.scss';\nimport App from 'App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"guitar\":\"Guitar_guitar__1IXuD\",\"fretboard\":\"Guitar_fretboard__3kbmp\",\"tuners\":\"Guitar_tuners__HuulZ\",\"fretnumber\":\"Guitar_fretnumber__3qvBu\",\"tuner\":\"Guitar_tuner__3uDIU\",\"fret\":\"Guitar_fret__rN2Qx\",\"tunerSelect\":\"Guitar_tunerSelect__2Otl5\",\"selectListIcon\":\"Guitar_selectListIcon__3yd69\",\"frets\":\"Guitar_frets__1Q1Sh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selection\":\"Selection_selection__7gHr9\",\"formControl\":\"Selection_formControl__2zfkm\",\"select\":\"Selection_select__27ja9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"0\":\"Note_0__1SIbH\",\"1\":\"Note_1__3apnE\",\"2\":\"Note_2__2oAGg\",\"3\":\"Note_3__1WD4C\",\"4\":\"Note_4__2aCML\",\"5\":\"Note_5__3K9i6\",\"6\":\"Note_6__2UrWD\",\"7\":\"Note_7__2R1Y9\",\"8\":\"Note_8__226tt\",\"9\":\"Note_9__1MnDw\",\"10\":\"Note_10__UvCa8\",\"11\":\"Note_11__2zsoD\",\"note\":\"Note_note__1E7Sj\",\"button\":\"Note_button__2P0Iv\",\"notSelected\":\"Note_notSelected__6XZbI\",\"black\":\"Note_black__18s5g\",\"white\":\"Note_white__1RKUi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyboardKey\":\"KeyboardKey_keyboardKey__2DuOU\",\"white\":\"KeyboardKey_white__2SzWr\",\"keyName\":\"KeyboardKey_keyName__3PnLx\",\"black\":\"KeyboardKey_black__2Jtum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1Gz8h\",\"logo\":\"Footer_logo__duocE\",\"text\":\"Footer_text__3T4nN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyboard\":\"Keyboard_keyboard__1IWMy\"};"],"sourceRoot":""}