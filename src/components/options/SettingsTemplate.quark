import * as quark from "quark-gui";

let InputField = quark.Molecules.FormElements.InputField;
let SelectList = quark.Molecules.FormElements.SelectList;
let Checkbox = quark.Molecules.FormElements.Checkbox;
let Modal = quark.Molecules.Messaging.Modal;
let notes = require("../../json/notes.json");

let noteOptions = [];
notes.forEach(function(note){
	noteOptions.push({
		name: note.name,
		value: note.number
	});
});

let globalSettings = {
	selectionType: SelectList.getModule({
		id: "global-settings-selectionType",
		name: "global-settings-selectionType",
		label: "Selection type",
		placeholder: "Choose selection type",
		options: [
		{name: 'Chord', value: 'chord'},
		{name: 'Scale', value: 'scale'}
		],
		vueBindings: {
			value: '$parent.selectionType'
		}
	}),
	labelType: SelectList.getModule({
		id: "global-settings-labelType",
		name: "global-settings-labelType",
		label: "Label type",
		placeholder: "Choose label type",
		options: [
		{name: 'Key', value: 'key'},
		{name: 'Interval', value: 'interval'},
		{name: 'Half steps', value: 'halfSteps'}
		],
		vueBindings: {
			value: '$parent.selectedLabel'
		}
	}),
	instrumentSelect: {
		guitar: Checkbox.getModule({
			id: 'selectInstrument-guitar',
			name: 'selectIntstrument',
			label: 'Guitar',
			value: 'guitar',
			vueBindings: {
				value: '$parent.selectedInstruments'
			}
		}),
		keyboard: Checkbox.getModule({
			id: 'selectInstrument-keyboard',
			name: 'selectIntstrument',
			label: 'Keyboard',
			value: 'keyboard',
			vueBindings: {
				value: '$parent.selectedInstruments'
			}
		})
	}
}


let keyboardSettings = {
	lowestNote: SelectList.getModule({
		id: "keyboard-settings-lowestNote",
		name: "keyboard-settings-lowestNote",
		label: "Lowest note",
		placeholder: "Select a key",
		type: "text",
		searchable: true,
		options: noteOptions,
		vueBindings: {
			value: '$parent.settings.keyboard.lowestNote'
		}
	}),
	keys: InputField.getModule({
		id: "keyboard-settings-keys",
		name: "keyboard-settings-keys",
		label: "Keys",
		type: "number",
		placeholder: "61",
		attributes: [
		"min='1'",
		"max='96'",
		"v-model.number='$parent.settings.keyboard.keys'"
		]
	})
};

let guitarSettings = {
	frets: InputField.getModule({
		id: "guitar-settings-frets",
		name: "guitar-settings-frets",
		label: "Frets",
		type: "number",
		placeholder: "22",
		attributes: [
		"min='1'",
		"max='50'",
		"v-model.number='$parent.settings.guitar.frets'"
		]
	})
};


let globalSettingsTemplate = `
<div>
<h2>Global:</h2>
${globalSettings.selectionType}
${globalSettings.labelType}
<span>Show instrument:</span>
${globalSettings.instrumentSelect.guitar}
${globalSettings.instrumentSelect.keyboard}
</div>
`;

let keyboardSettingsTemplate = `
<div>
<h2>Keyboard:</h2>
${keyboardSettings.keys}
${keyboardSettings.lowestNote}
</div>
`;

let guitarSettingsTemplate = `
<div>
<h2>Guitar:</h2>
${guitarSettings.frets}
</div>
`;


let modalContent = `
<div class="modal-content">
${globalSettingsTemplate}
${keyboardSettingsTemplate}
${guitarSettingsTemplate}
</div>
`;


let modal = Modal.getModule({
	id: 'SettingsModal',
	triggerElement: '<span class="open-settings-button"></span>',
	modalElement: {
		content: modalContent,
		scrollable: true,
		fullscreen: true
	}
})

let template = `
<div>
${modal}
</div>
`;

export default template;
